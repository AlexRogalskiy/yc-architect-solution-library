// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/ai/stt/v2/stt_service.proto

#include "yandex/cloud/ai/stt/v2/stt_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace yandex {
namespace cloud {
namespace ai {
namespace stt {
namespace v2 {
constexpr LongRunningRecognitionRequest::LongRunningRecognitionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : config_(nullptr)
  , audio_(nullptr){}
struct LongRunningRecognitionRequestDefaultTypeInternal {
  constexpr LongRunningRecognitionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LongRunningRecognitionRequestDefaultTypeInternal() {}
  union {
    LongRunningRecognitionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LongRunningRecognitionRequestDefaultTypeInternal _LongRunningRecognitionRequest_default_instance_;
constexpr LongRunningRecognitionResponse::LongRunningRecognitionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : chunks_(){}
struct LongRunningRecognitionResponseDefaultTypeInternal {
  constexpr LongRunningRecognitionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LongRunningRecognitionResponseDefaultTypeInternal() {}
  union {
    LongRunningRecognitionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LongRunningRecognitionResponseDefaultTypeInternal _LongRunningRecognitionResponse_default_instance_;
constexpr StreamingRecognitionRequest::StreamingRecognitionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct StreamingRecognitionRequestDefaultTypeInternal {
  constexpr StreamingRecognitionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StreamingRecognitionRequestDefaultTypeInternal() {}
  union {
    StreamingRecognitionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StreamingRecognitionRequestDefaultTypeInternal _StreamingRecognitionRequest_default_instance_;
constexpr StreamingRecognitionResponse::StreamingRecognitionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : chunks_(){}
struct StreamingRecognitionResponseDefaultTypeInternal {
  constexpr StreamingRecognitionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StreamingRecognitionResponseDefaultTypeInternal() {}
  union {
    StreamingRecognitionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StreamingRecognitionResponseDefaultTypeInternal _StreamingRecognitionResponse_default_instance_;
constexpr RecognitionAudio::RecognitionAudio(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct RecognitionAudioDefaultTypeInternal {
  constexpr RecognitionAudioDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RecognitionAudioDefaultTypeInternal() {}
  union {
    RecognitionAudio _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RecognitionAudioDefaultTypeInternal _RecognitionAudio_default_instance_;
constexpr RecognitionConfig::RecognitionConfig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : folder_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , specification_(nullptr){}
struct RecognitionConfigDefaultTypeInternal {
  constexpr RecognitionConfigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RecognitionConfigDefaultTypeInternal() {}
  union {
    RecognitionConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RecognitionConfigDefaultTypeInternal _RecognitionConfig_default_instance_;
constexpr RecognitionSpec::RecognitionSpec(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : language_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , model_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sample_rate_hertz_(PROTOBUF_LONGLONG(0))
  , audio_encoding_(0)

  , profanity_filter_(false)
  , partial_results_(false)
  , single_utterance_(false)
  , raw_results_(false)
  , audio_channel_count_(PROTOBUF_LONGLONG(0)){}
struct RecognitionSpecDefaultTypeInternal {
  constexpr RecognitionSpecDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RecognitionSpecDefaultTypeInternal() {}
  union {
    RecognitionSpec _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RecognitionSpecDefaultTypeInternal _RecognitionSpec_default_instance_;
constexpr SpeechRecognitionChunk::SpeechRecognitionChunk(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : alternatives_()
  , final_(false)
  , end_of_utterance_(false){}
struct SpeechRecognitionChunkDefaultTypeInternal {
  constexpr SpeechRecognitionChunkDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpeechRecognitionChunkDefaultTypeInternal() {}
  union {
    SpeechRecognitionChunk _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpeechRecognitionChunkDefaultTypeInternal _SpeechRecognitionChunk_default_instance_;
constexpr SpeechRecognitionResult::SpeechRecognitionResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : alternatives_()
  , channel_tag_(PROTOBUF_LONGLONG(0)){}
struct SpeechRecognitionResultDefaultTypeInternal {
  constexpr SpeechRecognitionResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpeechRecognitionResultDefaultTypeInternal() {}
  union {
    SpeechRecognitionResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpeechRecognitionResultDefaultTypeInternal _SpeechRecognitionResult_default_instance_;
constexpr SpeechRecognitionAlternative::SpeechRecognitionAlternative(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : words_()
  , text_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , confidence_(0){}
struct SpeechRecognitionAlternativeDefaultTypeInternal {
  constexpr SpeechRecognitionAlternativeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpeechRecognitionAlternativeDefaultTypeInternal() {}
  union {
    SpeechRecognitionAlternative _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpeechRecognitionAlternativeDefaultTypeInternal _SpeechRecognitionAlternative_default_instance_;
constexpr WordInfo::WordInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : word_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , start_time_(nullptr)
  , end_time_(nullptr)
  , confidence_(0){}
struct WordInfoDefaultTypeInternal {
  constexpr WordInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WordInfoDefaultTypeInternal() {}
  union {
    WordInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WordInfoDefaultTypeInternal _WordInfo_default_instance_;
}  // namespace v2
}  // namespace stt
}  // namespace ai
}  // namespace cloud
}  // namespace yandex
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto[11];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest, config_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest, audio_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse, chunks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, streaming_request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse, chunks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionAudio, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionAudio, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionAudio, audio_source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionConfig, specification_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionConfig, folder_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, audio_encoding_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, sample_rate_hertz_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, language_code_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, profanity_filter_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, model_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, partial_results_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, single_utterance_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, audio_channel_count_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, raw_results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk, alternatives_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk, final_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk, end_of_utterance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionResult, alternatives_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionResult, channel_tag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative, text_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative, confidence_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative, words_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::WordInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::WordInfo, start_time_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::WordInfo, end_time_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::WordInfo, word_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::WordInfo, confidence_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest)},
  { 7, -1, sizeof(::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse)},
  { 13, -1, sizeof(::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest)},
  { 21, -1, sizeof(::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse)},
  { 27, -1, sizeof(::yandex::cloud::ai::stt::v2::RecognitionAudio)},
  { 35, -1, sizeof(::yandex::cloud::ai::stt::v2::RecognitionConfig)},
  { 42, -1, sizeof(::yandex::cloud::ai::stt::v2::RecognitionSpec)},
  { 56, -1, sizeof(::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk)},
  { 64, -1, sizeof(::yandex::cloud::ai::stt::v2::SpeechRecognitionResult)},
  { 71, -1, sizeof(::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative)},
  { 79, -1, sizeof(::yandex::cloud::ai::stt::v2::WordInfo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_LongRunningRecognitionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_LongRunningRecognitionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_StreamingRecognitionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_StreamingRecognitionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_RecognitionAudio_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_RecognitionConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_RecognitionSpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_SpeechRecognitionChunk_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_SpeechRecognitionResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_SpeechRecognitionAlternative_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_WordInfo_default_instance_),
};

const char descriptor_table_protodef_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n(yandex/cloud/ai/stt/v2/stt_service.pro"
  "to\022\026yandex.cloud.ai.stt.v2\032\034google/api/a"
  "nnotations.proto\032\036google/protobuf/durati"
  "on.proto\032 yandex/cloud/api/operation.pro"
  "to\032&yandex/cloud/operation/operation.pro"
  "to\"\223\001\n\035LongRunningRecognitionRequest\0229\n\006"
  "config\030\001 \001(\0132).yandex.cloud.ai.stt.v2.Re"
  "cognitionConfig\0227\n\005audio\030\002 \001(\0132(.yandex."
  "cloud.ai.stt.v2.RecognitionAudio\"a\n\036Long"
  "RunningRecognitionResponse\022\?\n\006chunks\030\001 \003"
  "(\0132/.yandex.cloud.ai.stt.v2.SpeechRecogn"
  "itionResult\"\210\001\n\033StreamingRecognitionRequ"
  "est\022;\n\006config\030\001 \001(\0132).yandex.cloud.ai.st"
  "t.v2.RecognitionConfigH\000\022\027\n\raudio_conten"
  "t\030\002 \001(\014H\000B\023\n\021streaming_request\"}\n\034Stream"
  "ingRecognitionResponse\022>\n\006chunks\030\001 \003(\0132."
  ".yandex.cloud.ai.stt.v2.SpeechRecognitio"
  "nChunkJ\004\010\002\020\003R\027end_of_single_utterance\"D\n"
  "\020RecognitionAudio\022\021\n\007content\030\001 \001(\014H\000\022\r\n\003"
  "uri\030\002 \001(\tH\000B\016\n\014audio_source\"f\n\021Recogniti"
  "onConfig\022>\n\rspecification\030\001 \001(\0132\'.yandex"
  ".cloud.ai.stt.v2.RecognitionSpec\022\021\n\tfold"
  "er_id\030\002 \001(\t\"\361\002\n\017RecognitionSpec\022M\n\016audio"
  "_encoding\030\001 \001(\01625.yandex.cloud.ai.stt.v2"
  ".RecognitionSpec.AudioEncoding\022\031\n\021sample"
  "_rate_hertz\030\002 \001(\003\022\025\n\rlanguage_code\030\003 \001(\t"
  "\022\030\n\020profanity_filter\030\004 \001(\010\022\r\n\005model\030\005 \001("
  "\t\022\027\n\017partial_results\030\007 \001(\010\022\030\n\020single_utt"
  "erance\030\010 \001(\010\022\033\n\023audio_channel_count\030\t \001("
  "\003\022\023\n\013raw_results\030\n \001(\010\"O\n\rAudioEncoding\022"
  "\036\n\032AUDIO_ENCODING_UNSPECIFIED\020\000\022\020\n\014LINEA"
  "R16_PCM\020\001\022\014\n\010OGG_OPUS\020\002\"\215\001\n\026SpeechRecogn"
  "itionChunk\022J\n\014alternatives\030\001 \003(\01324.yande"
  "x.cloud.ai.stt.v2.SpeechRecognitionAlter"
  "native\022\r\n\005final\030\002 \001(\010\022\030\n\020end_of_utteranc"
  "e\030\003 \001(\010\"z\n\027SpeechRecognitionResult\022J\n\014al"
  "ternatives\030\001 \003(\01324.yandex.cloud.ai.stt.v"
  "2.SpeechRecognitionAlternative\022\023\n\013channe"
  "l_tag\030\002 \001(\003\"q\n\034SpeechRecognitionAlternat"
  "ive\022\014\n\004text\030\001 \001(\t\022\022\n\nconfidence\030\002 \001(\002\022/\n"
  "\005words\030\003 \003(\0132 .yandex.cloud.ai.stt.v2.Wo"
  "rdInfo\"\210\001\n\010WordInfo\022-\n\nstart_time\030\001 \001(\0132"
  "\031.google.protobuf.Duration\022+\n\010end_time\030\002"
  " \001(\0132\031.google.protobuf.Duration\022\014\n\004word\030"
  "\003 \001(\t\022\022\n\nconfidence\030\004 \001(\0022\333\002\n\nSttService"
  "\022\304\001\n\024LongRunningRecognize\0225.yandex.cloud"
  ".ai.stt.v2.LongRunningRecognitionRequest"
  "\032!.yandex.cloud.operation.Operation\"R\202\323\344"
  "\223\002(\"#/speech/stt/v2/longRunningRecognize"
  ":\001*\262\322* \022\036LongRunningRecognitionResponse\022"
  "\205\001\n\022StreamingRecognize\0223.yandex.cloud.ai"
  ".stt.v2.StreamingRecognitionRequest\0324.ya"
  "ndex.cloud.ai.stt.v2.StreamingRecognitio"
  "nResponse\"\000(\0010\001B\\\n\032yandex.cloud.api.ai.s"
  "tt.v2Z>github.com/yandex-cloud/go-genpro"
  "to/yandex/cloud/ai/stt/v2;sttb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_deps[4] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_yandex_2fcloud_2fapi_2foperation_2eproto,
  &::descriptor_table_yandex_2fcloud_2foperation_2foperation_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto = {
  false, false, 2237, descriptor_table_protodef_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto, "yandex/cloud/ai/stt/v2/stt_service.proto", 
  &descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_once, descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_deps, 4, 11,
  schemas, file_default_instances, TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto::offsets,
  file_level_metadata_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto, file_level_enum_descriptors_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto, file_level_service_descriptors_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto);
  return descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto(&descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto);
namespace yandex {
namespace cloud {
namespace ai {
namespace stt {
namespace v2 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RecognitionSpec_AudioEncoding_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto);
  return file_level_enum_descriptors_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto[0];
}
bool RecognitionSpec_AudioEncoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr RecognitionSpec_AudioEncoding RecognitionSpec::AUDIO_ENCODING_UNSPECIFIED;
constexpr RecognitionSpec_AudioEncoding RecognitionSpec::LINEAR16_PCM;
constexpr RecognitionSpec_AudioEncoding RecognitionSpec::OGG_OPUS;
constexpr RecognitionSpec_AudioEncoding RecognitionSpec::AudioEncoding_MIN;
constexpr RecognitionSpec_AudioEncoding RecognitionSpec::AudioEncoding_MAX;
constexpr int RecognitionSpec::AudioEncoding_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class LongRunningRecognitionRequest::_Internal {
 public:
  static const ::yandex::cloud::ai::stt::v2::RecognitionConfig& config(const LongRunningRecognitionRequest* msg);
  static const ::yandex::cloud::ai::stt::v2::RecognitionAudio& audio(const LongRunningRecognitionRequest* msg);
};

const ::yandex::cloud::ai::stt::v2::RecognitionConfig&
LongRunningRecognitionRequest::_Internal::config(const LongRunningRecognitionRequest* msg) {
  return *msg->config_;
}
const ::yandex::cloud::ai::stt::v2::RecognitionAudio&
LongRunningRecognitionRequest::_Internal::audio(const LongRunningRecognitionRequest* msg) {
  return *msg->audio_;
}
LongRunningRecognitionRequest::LongRunningRecognitionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
}
LongRunningRecognitionRequest::LongRunningRecognitionRequest(const LongRunningRecognitionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    config_ = new ::yandex::cloud::ai::stt::v2::RecognitionConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  if (from._internal_has_audio()) {
    audio_ = new ::yandex::cloud::ai::stt::v2::RecognitionAudio(*from.audio_);
  } else {
    audio_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
}

void LongRunningRecognitionRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&config_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&audio_) -
    reinterpret_cast<char*>(&config_)) + sizeof(audio_));
}

LongRunningRecognitionRequest::~LongRunningRecognitionRequest() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LongRunningRecognitionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete audio_;
}

void LongRunningRecognitionRequest::ArenaDtor(void* object) {
  LongRunningRecognitionRequest* _this = reinterpret_cast< LongRunningRecognitionRequest* >(object);
  (void)_this;
}
void LongRunningRecognitionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LongRunningRecognitionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LongRunningRecognitionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  if (GetArena() == nullptr && audio_ != nullptr) {
    delete audio_;
  }
  audio_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LongRunningRecognitionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .yandex.cloud.ai.stt.v2.RecognitionAudio audio = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LongRunningRecognitionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
  if (this->has_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::config(this), target, stream);
  }

  // .yandex.cloud.ai.stt.v2.RecognitionAudio audio = 2;
  if (this->has_audio()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::audio(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  return target;
}

size_t LongRunningRecognitionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .yandex.cloud.ai.stt.v2.RecognitionAudio audio = 2;
  if (this->has_audio()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *audio_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LongRunningRecognitionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LongRunningRecognitionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LongRunningRecognitionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
    MergeFrom(*source);
  }
}

void LongRunningRecognitionRequest::MergeFrom(const LongRunningRecognitionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    _internal_mutable_config()->::yandex::cloud::ai::stt::v2::RecognitionConfig::MergeFrom(from._internal_config());
  }
  if (from.has_audio()) {
    _internal_mutable_audio()->::yandex::cloud::ai::stt::v2::RecognitionAudio::MergeFrom(from._internal_audio());
  }
}

void LongRunningRecognitionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongRunningRecognitionRequest::CopyFrom(const LongRunningRecognitionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongRunningRecognitionRequest::IsInitialized() const {
  return true;
}

void LongRunningRecognitionRequest::InternalSwap(LongRunningRecognitionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LongRunningRecognitionRequest, audio_)
      + sizeof(LongRunningRecognitionRequest::audio_)
      - PROTOBUF_FIELD_OFFSET(LongRunningRecognitionRequest, config_)>(
          reinterpret_cast<char*>(&config_),
          reinterpret_cast<char*>(&other->config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LongRunningRecognitionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LongRunningRecognitionResponse::_Internal {
 public:
};

LongRunningRecognitionResponse::LongRunningRecognitionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  chunks_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
}
LongRunningRecognitionResponse::LongRunningRecognitionResponse(const LongRunningRecognitionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      chunks_(from.chunks_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
}

void LongRunningRecognitionResponse::SharedCtor() {
}

LongRunningRecognitionResponse::~LongRunningRecognitionResponse() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LongRunningRecognitionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LongRunningRecognitionResponse::ArenaDtor(void* object) {
  LongRunningRecognitionResponse* _this = reinterpret_cast< LongRunningRecognitionResponse* >(object);
  (void)_this;
}
void LongRunningRecognitionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LongRunningRecognitionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LongRunningRecognitionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunks_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LongRunningRecognitionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionResult chunks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_chunks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LongRunningRecognitionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionResult chunks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_chunks_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_chunks(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  return target;
}

size_t LongRunningRecognitionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionResult chunks = 1;
  total_size += 1UL * this->_internal_chunks_size();
  for (const auto& msg : this->chunks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LongRunningRecognitionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LongRunningRecognitionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LongRunningRecognitionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
    MergeFrom(*source);
  }
}

void LongRunningRecognitionResponse::MergeFrom(const LongRunningRecognitionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chunks_.MergeFrom(from.chunks_);
}

void LongRunningRecognitionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongRunningRecognitionResponse::CopyFrom(const LongRunningRecognitionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongRunningRecognitionResponse::IsInitialized() const {
  return true;
}

void LongRunningRecognitionResponse::InternalSwap(LongRunningRecognitionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  chunks_.InternalSwap(&other->chunks_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LongRunningRecognitionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StreamingRecognitionRequest::_Internal {
 public:
  static const ::yandex::cloud::ai::stt::v2::RecognitionConfig& config(const StreamingRecognitionRequest* msg);
};

const ::yandex::cloud::ai::stt::v2::RecognitionConfig&
StreamingRecognitionRequest::_Internal::config(const StreamingRecognitionRequest* msg) {
  return *msg->streaming_request_.config_;
}
void StreamingRecognitionRequest::set_allocated_config(::yandex::cloud::ai::stt::v2::RecognitionConfig* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_streaming_request();
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(config);
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    set_has_config();
    streaming_request_.config_ = config;
  }
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.config)
}
StreamingRecognitionRequest::StreamingRecognitionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
}
StreamingRecognitionRequest::StreamingRecognitionRequest(const StreamingRecognitionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_streaming_request();
  switch (from.streaming_request_case()) {
    case kConfig: {
      _internal_mutable_config()->::yandex::cloud::ai::stt::v2::RecognitionConfig::MergeFrom(from._internal_config());
      break;
    }
    case kAudioContent: {
      _internal_set_audio_content(from._internal_audio_content());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
}

void StreamingRecognitionRequest::SharedCtor() {
clear_has_streaming_request();
}

StreamingRecognitionRequest::~StreamingRecognitionRequest() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StreamingRecognitionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_streaming_request()) {
    clear_streaming_request();
  }
}

void StreamingRecognitionRequest::ArenaDtor(void* object) {
  StreamingRecognitionRequest* _this = reinterpret_cast< StreamingRecognitionRequest* >(object);
  (void)_this;
}
void StreamingRecognitionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StreamingRecognitionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StreamingRecognitionRequest::clear_streaming_request() {
// @@protoc_insertion_point(one_of_clear_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  switch (streaming_request_case()) {
    case kConfig: {
      if (GetArena() == nullptr) {
        delete streaming_request_.config_;
      }
      break;
    }
    case kAudioContent: {
      streaming_request_.audio_content_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STREAMING_REQUEST_NOT_SET;
}


void StreamingRecognitionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_streaming_request();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamingRecognitionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes audio_content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_audio_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamingRecognitionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
  if (_internal_has_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::config(this), target, stream);
  }

  // bytes audio_content = 2;
  if (_internal_has_audio_content()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_audio_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  return target;
}

size_t StreamingRecognitionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (streaming_request_case()) {
    // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
    case kConfig: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *streaming_request_.config_);
      break;
    }
    // bytes audio_content = 2;
    case kAudioContent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_audio_content());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamingRecognitionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamingRecognitionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamingRecognitionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
    MergeFrom(*source);
  }
}

void StreamingRecognitionRequest::MergeFrom(const StreamingRecognitionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.streaming_request_case()) {
    case kConfig: {
      _internal_mutable_config()->::yandex::cloud::ai::stt::v2::RecognitionConfig::MergeFrom(from._internal_config());
      break;
    }
    case kAudioContent: {
      _internal_set_audio_content(from._internal_audio_content());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
}

void StreamingRecognitionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamingRecognitionRequest::CopyFrom(const StreamingRecognitionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamingRecognitionRequest::IsInitialized() const {
  return true;
}

void StreamingRecognitionRequest::InternalSwap(StreamingRecognitionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(streaming_request_, other->streaming_request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamingRecognitionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StreamingRecognitionResponse::_Internal {
 public:
};

StreamingRecognitionResponse::StreamingRecognitionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  chunks_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
}
StreamingRecognitionResponse::StreamingRecognitionResponse(const StreamingRecognitionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      chunks_(from.chunks_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
}

void StreamingRecognitionResponse::SharedCtor() {
}

StreamingRecognitionResponse::~StreamingRecognitionResponse() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StreamingRecognitionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StreamingRecognitionResponse::ArenaDtor(void* object) {
  StreamingRecognitionResponse* _this = reinterpret_cast< StreamingRecognitionResponse* >(object);
  (void)_this;
}
void StreamingRecognitionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StreamingRecognitionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StreamingRecognitionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunks_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamingRecognitionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionChunk chunks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_chunks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamingRecognitionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionChunk chunks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_chunks_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_chunks(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  return target;
}

size_t StreamingRecognitionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionChunk chunks = 1;
  total_size += 1UL * this->_internal_chunks_size();
  for (const auto& msg : this->chunks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamingRecognitionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamingRecognitionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamingRecognitionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
    MergeFrom(*source);
  }
}

void StreamingRecognitionResponse::MergeFrom(const StreamingRecognitionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chunks_.MergeFrom(from.chunks_);
}

void StreamingRecognitionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamingRecognitionResponse::CopyFrom(const StreamingRecognitionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamingRecognitionResponse::IsInitialized() const {
  return true;
}

void StreamingRecognitionResponse::InternalSwap(StreamingRecognitionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  chunks_.InternalSwap(&other->chunks_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamingRecognitionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RecognitionAudio::_Internal {
 public:
};

RecognitionAudio::RecognitionAudio(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:yandex.cloud.ai.stt.v2.RecognitionAudio)
}
RecognitionAudio::RecognitionAudio(const RecognitionAudio& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_audio_source();
  switch (from.audio_source_case()) {
    case kContent: {
      _internal_set_content(from._internal_content());
      break;
    }
    case kUri: {
      _internal_set_uri(from._internal_uri());
      break;
    }
    case AUDIO_SOURCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.RecognitionAudio)
}

void RecognitionAudio::SharedCtor() {
clear_has_audio_source();
}

RecognitionAudio::~RecognitionAudio() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.RecognitionAudio)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecognitionAudio::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_audio_source()) {
    clear_audio_source();
  }
}

void RecognitionAudio::ArenaDtor(void* object) {
  RecognitionAudio* _this = reinterpret_cast< RecognitionAudio* >(object);
  (void)_this;
}
void RecognitionAudio::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecognitionAudio::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RecognitionAudio::clear_audio_source() {
// @@protoc_insertion_point(one_of_clear_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  switch (audio_source_case()) {
    case kContent: {
      audio_source_.content_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kUri: {
      audio_source_.uri_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case AUDIO_SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = AUDIO_SOURCE_NOT_SET;
}


void RecognitionAudio::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_audio_source();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecognitionAudio::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes content = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uri = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yandex.cloud.ai.stt.v2.RecognitionAudio.uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecognitionAudio::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (_internal_has_content()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_content(), target);
  }

  // string uri = 2;
  if (_internal_has_uri()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionAudio.uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.RecognitionAudio)
  return target;
}

size_t RecognitionAudio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (audio_source_case()) {
    // bytes content = 1;
    case kContent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_content());
      break;
    }
    // string uri = 2;
    case kUri: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_uri());
      break;
    }
    case AUDIO_SOURCE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecognitionAudio::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognitionAudio* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecognitionAudio>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.RecognitionAudio)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.RecognitionAudio)
    MergeFrom(*source);
  }
}

void RecognitionAudio::MergeFrom(const RecognitionAudio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.audio_source_case()) {
    case kContent: {
      _internal_set_content(from._internal_content());
      break;
    }
    case kUri: {
      _internal_set_uri(from._internal_uri());
      break;
    }
    case AUDIO_SOURCE_NOT_SET: {
      break;
    }
  }
}

void RecognitionAudio::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognitionAudio::CopyFrom(const RecognitionAudio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognitionAudio::IsInitialized() const {
  return true;
}

void RecognitionAudio::InternalSwap(RecognitionAudio* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(audio_source_, other->audio_source_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecognitionAudio::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RecognitionConfig::_Internal {
 public:
  static const ::yandex::cloud::ai::stt::v2::RecognitionSpec& specification(const RecognitionConfig* msg);
};

const ::yandex::cloud::ai::stt::v2::RecognitionSpec&
RecognitionConfig::_Internal::specification(const RecognitionConfig* msg) {
  return *msg->specification_;
}
RecognitionConfig::RecognitionConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:yandex.cloud.ai.stt.v2.RecognitionConfig)
}
RecognitionConfig::RecognitionConfig(const RecognitionConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  folder_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_folder_id().empty()) {
    folder_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_folder_id(), 
      GetArena());
  }
  if (from._internal_has_specification()) {
    specification_ = new ::yandex::cloud::ai::stt::v2::RecognitionSpec(*from.specification_);
  } else {
    specification_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.RecognitionConfig)
}

void RecognitionConfig::SharedCtor() {
folder_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
specification_ = nullptr;
}

RecognitionConfig::~RecognitionConfig() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.RecognitionConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecognitionConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  folder_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete specification_;
}

void RecognitionConfig::ArenaDtor(void* object) {
  RecognitionConfig* _this = reinterpret_cast< RecognitionConfig* >(object);
  (void)_this;
}
void RecognitionConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecognitionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RecognitionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  folder_id_.ClearToEmpty();
  if (GetArena() == nullptr && specification_ != nullptr) {
    delete specification_;
  }
  specification_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecognitionConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yandex.cloud.ai.stt.v2.RecognitionSpec specification = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_specification(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string folder_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_folder_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecognitionConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionSpec specification = 1;
  if (this->has_specification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::specification(this), target, stream);
  }

  // string folder_id = 2;
  if (this->folder_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_folder_id().data(), static_cast<int>(this->_internal_folder_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_folder_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.RecognitionConfig)
  return target;
}

size_t RecognitionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string folder_id = 2;
  if (this->folder_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_folder_id());
  }

  // .yandex.cloud.ai.stt.v2.RecognitionSpec specification = 1;
  if (this->has_specification()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *specification_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecognitionConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognitionConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecognitionConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.RecognitionConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.RecognitionConfig)
    MergeFrom(*source);
  }
}

void RecognitionConfig::MergeFrom(const RecognitionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.folder_id().size() > 0) {
    _internal_set_folder_id(from._internal_folder_id());
  }
  if (from.has_specification()) {
    _internal_mutable_specification()->::yandex::cloud::ai::stt::v2::RecognitionSpec::MergeFrom(from._internal_specification());
  }
}

void RecognitionConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognitionConfig::CopyFrom(const RecognitionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognitionConfig::IsInitialized() const {
  return true;
}

void RecognitionConfig::InternalSwap(RecognitionConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  folder_id_.Swap(&other->folder_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(specification_, other->specification_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecognitionConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RecognitionSpec::_Internal {
 public:
};

RecognitionSpec::RecognitionSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:yandex.cloud.ai.stt.v2.RecognitionSpec)
}
RecognitionSpec::RecognitionSpec(const RecognitionSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_language_code().empty()) {
    language_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_language_code(), 
      GetArena());
  }
  model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model().empty()) {
    model_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_model(), 
      GetArena());
  }
  ::memcpy(&sample_rate_hertz_, &from.sample_rate_hertz_,
    static_cast<size_t>(reinterpret_cast<char*>(&audio_channel_count_) -
    reinterpret_cast<char*>(&sample_rate_hertz_)) + sizeof(audio_channel_count_));
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.RecognitionSpec)
}

void RecognitionSpec::SharedCtor() {
language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&sample_rate_hertz_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&audio_channel_count_) -
    reinterpret_cast<char*>(&sample_rate_hertz_)) + sizeof(audio_channel_count_));
}

RecognitionSpec::~RecognitionSpec() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.RecognitionSpec)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecognitionSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  language_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RecognitionSpec::ArenaDtor(void* object) {
  RecognitionSpec* _this = reinterpret_cast< RecognitionSpec* >(object);
  (void)_this;
}
void RecognitionSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecognitionSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RecognitionSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_code_.ClearToEmpty();
  model_.ClearToEmpty();
  ::memset(&sample_rate_hertz_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audio_channel_count_) -
      reinterpret_cast<char*>(&sample_rate_hertz_)) + sizeof(audio_channel_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecognitionSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yandex.cloud.ai.stt.v2.RecognitionSpec.AudioEncoding audio_encoding = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_audio_encoding(static_cast<::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding>(val));
        } else goto handle_unusual;
        continue;
      // int64 sample_rate_hertz = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          sample_rate_hertz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string language_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_language_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yandex.cloud.ai.stt.v2.RecognitionSpec.language_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool profanity_filter = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          profanity_filter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_model();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yandex.cloud.ai.stt.v2.RecognitionSpec.model"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool partial_results = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          partial_results_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool single_utterance = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          single_utterance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 audio_channel_count = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          audio_channel_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool raw_results = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          raw_results_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecognitionSpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionSpec.AudioEncoding audio_encoding = 1;
  if (this->audio_encoding() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_audio_encoding(), target);
  }

  // int64 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_sample_rate_hertz(), target);
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language_code().data(), static_cast<int>(this->_internal_language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionSpec.language_code");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_language_code(), target);
  }

  // bool profanity_filter = 4;
  if (this->profanity_filter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_profanity_filter(), target);
  }

  // string model = 5;
  if (this->model().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model().data(), static_cast<int>(this->_internal_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionSpec.model");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_model(), target);
  }

  // bool partial_results = 7;
  if (this->partial_results() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_partial_results(), target);
  }

  // bool single_utterance = 8;
  if (this->single_utterance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_single_utterance(), target);
  }

  // int64 audio_channel_count = 9;
  if (this->audio_channel_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->_internal_audio_channel_count(), target);
  }

  // bool raw_results = 10;
  if (this->raw_results() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_raw_results(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.RecognitionSpec)
  return target;
}

size_t RecognitionSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language_code());
  }

  // string model = 5;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model());
  }

  // int64 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_sample_rate_hertz());
  }

  // .yandex.cloud.ai.stt.v2.RecognitionSpec.AudioEncoding audio_encoding = 1;
  if (this->audio_encoding() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_audio_encoding());
  }

  // bool profanity_filter = 4;
  if (this->profanity_filter() != 0) {
    total_size += 1 + 1;
  }

  // bool partial_results = 7;
  if (this->partial_results() != 0) {
    total_size += 1 + 1;
  }

  // bool single_utterance = 8;
  if (this->single_utterance() != 0) {
    total_size += 1 + 1;
  }

  // bool raw_results = 10;
  if (this->raw_results() != 0) {
    total_size += 1 + 1;
  }

  // int64 audio_channel_count = 9;
  if (this->audio_channel_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_audio_channel_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecognitionSpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognitionSpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecognitionSpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.RecognitionSpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.RecognitionSpec)
    MergeFrom(*source);
  }
}

void RecognitionSpec::MergeFrom(const RecognitionSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.language_code().size() > 0) {
    _internal_set_language_code(from._internal_language_code());
  }
  if (from.model().size() > 0) {
    _internal_set_model(from._internal_model());
  }
  if (from.sample_rate_hertz() != 0) {
    _internal_set_sample_rate_hertz(from._internal_sample_rate_hertz());
  }
  if (from.audio_encoding() != 0) {
    _internal_set_audio_encoding(from._internal_audio_encoding());
  }
  if (from.profanity_filter() != 0) {
    _internal_set_profanity_filter(from._internal_profanity_filter());
  }
  if (from.partial_results() != 0) {
    _internal_set_partial_results(from._internal_partial_results());
  }
  if (from.single_utterance() != 0) {
    _internal_set_single_utterance(from._internal_single_utterance());
  }
  if (from.raw_results() != 0) {
    _internal_set_raw_results(from._internal_raw_results());
  }
  if (from.audio_channel_count() != 0) {
    _internal_set_audio_channel_count(from._internal_audio_channel_count());
  }
}

void RecognitionSpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognitionSpec::CopyFrom(const RecognitionSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognitionSpec::IsInitialized() const {
  return true;
}

void RecognitionSpec::InternalSwap(RecognitionSpec* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  language_code_.Swap(&other->language_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_.Swap(&other->model_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RecognitionSpec, audio_channel_count_)
      + sizeof(RecognitionSpec::audio_channel_count_)
      - PROTOBUF_FIELD_OFFSET(RecognitionSpec, sample_rate_hertz_)>(
          reinterpret_cast<char*>(&sample_rate_hertz_),
          reinterpret_cast<char*>(&other->sample_rate_hertz_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RecognitionSpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SpeechRecognitionChunk::_Internal {
 public:
};

SpeechRecognitionChunk::SpeechRecognitionChunk(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  alternatives_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
}
SpeechRecognitionChunk::SpeechRecognitionChunk(const SpeechRecognitionChunk& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      alternatives_(from.alternatives_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&final_, &from.final_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_of_utterance_) -
    reinterpret_cast<char*>(&final_)) + sizeof(end_of_utterance_));
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
}

void SpeechRecognitionChunk::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&final_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&end_of_utterance_) -
    reinterpret_cast<char*>(&final_)) + sizeof(end_of_utterance_));
}

SpeechRecognitionChunk::~SpeechRecognitionChunk() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpeechRecognitionChunk::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SpeechRecognitionChunk::ArenaDtor(void* object) {
  SpeechRecognitionChunk* _this = reinterpret_cast< SpeechRecognitionChunk* >(object);
  (void)_this;
}
void SpeechRecognitionChunk::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpeechRecognitionChunk::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpeechRecognitionChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alternatives_.Clear();
  ::memset(&final_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_of_utterance_) -
      reinterpret_cast<char*>(&final_)) + sizeof(end_of_utterance_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpeechRecognitionChunk::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_alternatives(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // bool final = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          final_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool end_of_utterance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          end_of_utterance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpeechRecognitionChunk::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_alternatives_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_alternatives(i), target, stream);
  }

  // bool final = 2;
  if (this->final() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_final(), target);
  }

  // bool end_of_utterance = 3;
  if (this->end_of_utterance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_end_of_utterance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  return target;
}

size_t SpeechRecognitionChunk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  total_size += 1UL * this->_internal_alternatives_size();
  for (const auto& msg : this->alternatives_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool final = 2;
  if (this->final() != 0) {
    total_size += 1 + 1;
  }

  // bool end_of_utterance = 3;
  if (this->end_of_utterance() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpeechRecognitionChunk::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  GOOGLE_DCHECK_NE(&from, this);
  const SpeechRecognitionChunk* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpeechRecognitionChunk>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
    MergeFrom(*source);
  }
}

void SpeechRecognitionChunk::MergeFrom(const SpeechRecognitionChunk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alternatives_.MergeFrom(from.alternatives_);
  if (from.final() != 0) {
    _internal_set_final(from._internal_final());
  }
  if (from.end_of_utterance() != 0) {
    _internal_set_end_of_utterance(from._internal_end_of_utterance());
  }
}

void SpeechRecognitionChunk::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeechRecognitionChunk::CopyFrom(const SpeechRecognitionChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeechRecognitionChunk::IsInitialized() const {
  return true;
}

void SpeechRecognitionChunk::InternalSwap(SpeechRecognitionChunk* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  alternatives_.InternalSwap(&other->alternatives_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpeechRecognitionChunk, end_of_utterance_)
      + sizeof(SpeechRecognitionChunk::end_of_utterance_)
      - PROTOBUF_FIELD_OFFSET(SpeechRecognitionChunk, final_)>(
          reinterpret_cast<char*>(&final_),
          reinterpret_cast<char*>(&other->final_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpeechRecognitionChunk::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SpeechRecognitionResult::_Internal {
 public:
};

SpeechRecognitionResult::SpeechRecognitionResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  alternatives_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
}
SpeechRecognitionResult::SpeechRecognitionResult(const SpeechRecognitionResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      alternatives_(from.alternatives_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  channel_tag_ = from.channel_tag_;
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
}

void SpeechRecognitionResult::SharedCtor() {
channel_tag_ = PROTOBUF_LONGLONG(0);
}

SpeechRecognitionResult::~SpeechRecognitionResult() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpeechRecognitionResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SpeechRecognitionResult::ArenaDtor(void* object) {
  SpeechRecognitionResult* _this = reinterpret_cast< SpeechRecognitionResult* >(object);
  (void)_this;
}
void SpeechRecognitionResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpeechRecognitionResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpeechRecognitionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alternatives_.Clear();
  channel_tag_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpeechRecognitionResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_alternatives(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int64 channel_tag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          channel_tag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpeechRecognitionResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_alternatives_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_alternatives(i), target, stream);
  }

  // int64 channel_tag = 2;
  if (this->channel_tag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_channel_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  return target;
}

size_t SpeechRecognitionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  total_size += 1UL * this->_internal_alternatives_size();
  for (const auto& msg : this->alternatives_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 channel_tag = 2;
  if (this->channel_tag() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_channel_tag());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpeechRecognitionResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SpeechRecognitionResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpeechRecognitionResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
    MergeFrom(*source);
  }
}

void SpeechRecognitionResult::MergeFrom(const SpeechRecognitionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alternatives_.MergeFrom(from.alternatives_);
  if (from.channel_tag() != 0) {
    _internal_set_channel_tag(from._internal_channel_tag());
  }
}

void SpeechRecognitionResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeechRecognitionResult::CopyFrom(const SpeechRecognitionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeechRecognitionResult::IsInitialized() const {
  return true;
}

void SpeechRecognitionResult::InternalSwap(SpeechRecognitionResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  alternatives_.InternalSwap(&other->alternatives_);
  swap(channel_tag_, other->channel_tag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpeechRecognitionResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SpeechRecognitionAlternative::_Internal {
 public:
};

SpeechRecognitionAlternative::SpeechRecognitionAlternative(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  words_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
}
SpeechRecognitionAlternative::SpeechRecognitionAlternative(const SpeechRecognitionAlternative& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      words_(from.words_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text(), 
      GetArena());
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
}

void SpeechRecognitionAlternative::SharedCtor() {
text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
confidence_ = 0;
}

SpeechRecognitionAlternative::~SpeechRecognitionAlternative() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpeechRecognitionAlternative::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SpeechRecognitionAlternative::ArenaDtor(void* object) {
  SpeechRecognitionAlternative* _this = reinterpret_cast< SpeechRecognitionAlternative* >(object);
  (void)_this;
}
void SpeechRecognitionAlternative::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpeechRecognitionAlternative::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpeechRecognitionAlternative::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  words_.Clear();
  text_.ClearToEmpty();
  confidence_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpeechRecognitionAlternative::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float confidence = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          confidence_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated .yandex.cloud.ai.stt.v2.WordInfo words = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_words(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpeechRecognitionAlternative::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // float confidence = 2;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_confidence(), target);
  }

  // repeated .yandex.cloud.ai.stt.v2.WordInfo words = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_words_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_words(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  return target;
}

size_t SpeechRecognitionAlternative::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.WordInfo words = 3;
  total_size += 1UL * this->_internal_words_size();
  for (const auto& msg : this->words_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // float confidence = 2;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpeechRecognitionAlternative::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  GOOGLE_DCHECK_NE(&from, this);
  const SpeechRecognitionAlternative* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpeechRecognitionAlternative>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
    MergeFrom(*source);
  }
}

void SpeechRecognitionAlternative::MergeFrom(const SpeechRecognitionAlternative& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  words_.MergeFrom(from.words_);
  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (!(from.confidence() <= 0 && from.confidence() >= 0)) {
    _internal_set_confidence(from._internal_confidence());
  }
}

void SpeechRecognitionAlternative::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeechRecognitionAlternative::CopyFrom(const SpeechRecognitionAlternative& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeechRecognitionAlternative::IsInitialized() const {
  return true;
}

void SpeechRecognitionAlternative::InternalSwap(SpeechRecognitionAlternative* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  words_.InternalSwap(&other->words_);
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(confidence_, other->confidence_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpeechRecognitionAlternative::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WordInfo::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Duration& start_time(const WordInfo* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& end_time(const WordInfo* msg);
};

const PROTOBUF_NAMESPACE_ID::Duration&
WordInfo::_Internal::start_time(const WordInfo* msg) {
  return *msg->start_time_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
WordInfo::_Internal::end_time(const WordInfo* msg) {
  return *msg->end_time_;
}
void WordInfo::clear_start_time() {
  if (GetArena() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
}
void WordInfo::clear_end_time() {
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
WordInfo::WordInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:yandex.cloud.ai.stt.v2.WordInfo)
}
WordInfo::WordInfo(const WordInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_word().empty()) {
    word_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_word(), 
      GetArena());
  }
  if (from._internal_has_start_time()) {
    start_time_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.start_time_);
  } else {
    start_time_ = nullptr;
  }
  if (from._internal_has_end_time()) {
    end_time_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.WordInfo)
}

void WordInfo::SharedCtor() {
word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&start_time_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(confidence_));
}

WordInfo::~WordInfo() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.WordInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WordInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  word_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void WordInfo::ArenaDtor(void* object) {
  WordInfo* _this = reinterpret_cast< WordInfo* >(object);
  (void)_this;
}
void WordInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WordInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WordInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.WordInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  word_.ClearToEmpty();
  if (GetArena() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  confidence_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WordInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Duration start_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration end_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_end_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string word = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_word();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yandex.cloud.ai.stt.v2.WordInfo.word"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float confidence = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          confidence_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WordInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.WordInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration start_time = 1;
  if (this->has_start_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::start_time(this), target, stream);
  }

  // .google.protobuf.Duration end_time = 2;
  if (this->has_end_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::end_time(this), target, stream);
  }

  // string word = 3;
  if (this->word().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_word().data(), static_cast<int>(this->_internal_word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.WordInfo.word");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_word(), target);
  }

  // float confidence = 4;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_confidence(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.WordInfo)
  return target;
}

size_t WordInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.WordInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string word = 3;
  if (this->word().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_word());
  }

  // .google.protobuf.Duration start_time = 1;
  if (this->has_start_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Duration end_time = 2;
  if (this->has_end_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  // float confidence = 4;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WordInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.WordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WordInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WordInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.WordInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.WordInfo)
    MergeFrom(*source);
  }
}

void WordInfo::MergeFrom(const WordInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.WordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.word().size() > 0) {
    _internal_set_word(from._internal_word());
  }
  if (from.has_start_time()) {
    _internal_mutable_start_time()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_start_time());
  }
  if (from.has_end_time()) {
    _internal_mutable_end_time()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_end_time());
  }
  if (!(from.confidence() <= 0 && from.confidence() >= 0)) {
    _internal_set_confidence(from._internal_confidence());
  }
}

void WordInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.WordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WordInfo::CopyFrom(const WordInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.WordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WordInfo::IsInitialized() const {
  return true;
}

void WordInfo::InternalSwap(WordInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  word_.Swap(&other->word_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WordInfo, confidence_)
      + sizeof(WordInfo::confidence_)
      - PROTOBUF_FIELD_OFFSET(WordInfo, start_time_)>(
          reinterpret_cast<char*>(&start_time_),
          reinterpret_cast<char*>(&other->start_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WordInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace stt
}  // namespace ai
}  // namespace cloud
}  // namespace yandex
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::RecognitionAudio* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::RecognitionAudio >(Arena* arena) {
  return Arena::CreateMessageInternal< ::yandex::cloud::ai::stt::v2::RecognitionAudio >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::RecognitionConfig* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::RecognitionConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::yandex::cloud::ai::stt::v2::RecognitionConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::RecognitionSpec* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::RecognitionSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::yandex::cloud::ai::stt::v2::RecognitionSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk >(Arena* arena) {
  return Arena::CreateMessageInternal< ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >(Arena* arena) {
  return Arena::CreateMessageInternal< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::WordInfo* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::WordInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::yandex::cloud::ai::stt::v2::WordInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
