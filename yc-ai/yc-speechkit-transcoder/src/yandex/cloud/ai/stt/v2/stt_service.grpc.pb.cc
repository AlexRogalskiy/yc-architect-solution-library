// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: yandex/cloud/ai/stt/v2/stt_service.proto

#include "yandex/cloud/ai/stt/v2/stt_service.pb.h"
#include "yandex/cloud/ai/stt/v2/stt_service.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace yandex {
namespace cloud {
namespace ai {
namespace stt {
namespace v2 {

static const char* SttService_method_names[] = {
  "/yandex.cloud.ai.stt.v2.SttService/LongRunningRecognize",
  "/yandex.cloud.ai.stt.v2.SttService/StreamingRecognize",
};

std::unique_ptr< SttService::Stub> SttService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< SttService::Stub> stub(new SttService::Stub(channel, options));
  return stub;
}

SttService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_LongRunningRecognize_(SttService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_StreamingRecognize_(SttService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::BIDI_STREAMING, channel)
  {}

::grpc::Status SttService::Stub::LongRunningRecognize(::grpc::ClientContext* context, const ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest& request, ::yandex::cloud::operation::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall< ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest, ::yandex::cloud::operation::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_LongRunningRecognize_, context, request, response);
}

void SttService::Stub::async::LongRunningRecognize(::grpc::ClientContext* context, const ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest* request, ::yandex::cloud::operation::Operation* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest, ::yandex::cloud::operation::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_LongRunningRecognize_, context, request, response, std::move(f));
}

void SttService::Stub::async::LongRunningRecognize(::grpc::ClientContext* context, const ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest* request, ::yandex::cloud::operation::Operation* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_LongRunningRecognize_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::yandex::cloud::operation::Operation>* SttService::Stub::PrepareAsyncLongRunningRecognizeRaw(::grpc::ClientContext* context, const ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::yandex::cloud::operation::Operation, ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_LongRunningRecognize_, context, request);
}

::grpc::ClientAsyncResponseReader< ::yandex::cloud::operation::Operation>* SttService::Stub::AsyncLongRunningRecognizeRaw(::grpc::ClientContext* context, const ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncLongRunningRecognizeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::ClientReaderWriter< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse>* SttService::Stub::StreamingRecognizeRaw(::grpc::ClientContext* context) {
  return ::grpc::internal::ClientReaderWriterFactory< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse>::Create(channel_.get(), rpcmethod_StreamingRecognize_, context);
}

void SttService::Stub::async::StreamingRecognize(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest,::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse>* reactor) {
  ::grpc::internal::ClientCallbackReaderWriterFactory< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest,::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse>::Create(stub_->channel_.get(), stub_->rpcmethod_StreamingRecognize_, context, reactor);
}

::grpc::ClientAsyncReaderWriter< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse>* SttService::Stub::AsyncStreamingRecognizeRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse>::Create(channel_.get(), cq, rpcmethod_StreamingRecognize_, context, true, tag);
}

::grpc::ClientAsyncReaderWriter< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse>* SttService::Stub::PrepareAsyncStreamingRecognizeRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse>::Create(channel_.get(), cq, rpcmethod_StreamingRecognize_, context, false, nullptr);
}

SttService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SttService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SttService::Service, ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest, ::yandex::cloud::operation::Operation, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SttService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest* req,
             ::yandex::cloud::operation::Operation* resp) {
               return service->LongRunningRecognize(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SttService_method_names[1],
      ::grpc::internal::RpcMethod::BIDI_STREAMING,
      new ::grpc::internal::BidiStreamingHandler< SttService::Service, ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse>(
          [](SttService::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReaderWriter<::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse,
             ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest>* stream) {
               return service->StreamingRecognize(ctx, stream);
             }, this)));
}

SttService::Service::~Service() {
}

::grpc::Status SttService::Service::LongRunningRecognize(::grpc::ServerContext* context, const ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest* request, ::yandex::cloud::operation::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SttService::Service::StreamingRecognize(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse, ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest>* stream) {
  (void) context;
  (void) stream;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace yandex
}  // namespace cloud
}  // namespace ai
}  // namespace stt
}  // namespace v2

