// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/ai/stt/v2/stt_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/duration.pb.h>
#include "yandex/cloud/api/operation.pb.h"
#include "yandex/cloud/operation/operation.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(int index);
namespace yandex {
namespace cloud {
namespace ai {
namespace stt {
namespace v2 {
class LongRunningRecognitionRequest;
struct LongRunningRecognitionRequestDefaultTypeInternal;
extern LongRunningRecognitionRequestDefaultTypeInternal _LongRunningRecognitionRequest_default_instance_;
class LongRunningRecognitionResponse;
struct LongRunningRecognitionResponseDefaultTypeInternal;
extern LongRunningRecognitionResponseDefaultTypeInternal _LongRunningRecognitionResponse_default_instance_;
class RecognitionAudio;
struct RecognitionAudioDefaultTypeInternal;
extern RecognitionAudioDefaultTypeInternal _RecognitionAudio_default_instance_;
class RecognitionConfig;
struct RecognitionConfigDefaultTypeInternal;
extern RecognitionConfigDefaultTypeInternal _RecognitionConfig_default_instance_;
class RecognitionSpec;
struct RecognitionSpecDefaultTypeInternal;
extern RecognitionSpecDefaultTypeInternal _RecognitionSpec_default_instance_;
class SpeechRecognitionAlternative;
struct SpeechRecognitionAlternativeDefaultTypeInternal;
extern SpeechRecognitionAlternativeDefaultTypeInternal _SpeechRecognitionAlternative_default_instance_;
class SpeechRecognitionChunk;
struct SpeechRecognitionChunkDefaultTypeInternal;
extern SpeechRecognitionChunkDefaultTypeInternal _SpeechRecognitionChunk_default_instance_;
class SpeechRecognitionResult;
struct SpeechRecognitionResultDefaultTypeInternal;
extern SpeechRecognitionResultDefaultTypeInternal _SpeechRecognitionResult_default_instance_;
class StreamingRecognitionRequest;
struct StreamingRecognitionRequestDefaultTypeInternal;
extern StreamingRecognitionRequestDefaultTypeInternal _StreamingRecognitionRequest_default_instance_;
class StreamingRecognitionResponse;
struct StreamingRecognitionResponseDefaultTypeInternal;
extern StreamingRecognitionResponseDefaultTypeInternal _StreamingRecognitionResponse_default_instance_;
class WordInfo;
struct WordInfoDefaultTypeInternal;
extern WordInfoDefaultTypeInternal _WordInfo_default_instance_;
}  // namespace v2
}  // namespace stt
}  // namespace ai
}  // namespace cloud
}  // namespace yandex
PROTOBUF_NAMESPACE_OPEN
template<> ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest* Arena::CreateMaybeMessage<::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest>(Arena*);
template<> ::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse* Arena::CreateMaybeMessage<::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse>(Arena*);
template<> ::yandex::cloud::ai::stt::v2::RecognitionAudio* Arena::CreateMaybeMessage<::yandex::cloud::ai::stt::v2::RecognitionAudio>(Arena*);
template<> ::yandex::cloud::ai::stt::v2::RecognitionConfig* Arena::CreateMaybeMessage<::yandex::cloud::ai::stt::v2::RecognitionConfig>(Arena*);
template<> ::yandex::cloud::ai::stt::v2::RecognitionSpec* Arena::CreateMaybeMessage<::yandex::cloud::ai::stt::v2::RecognitionSpec>(Arena*);
template<> ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* Arena::CreateMaybeMessage<::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative>(Arena*);
template<> ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk* Arena::CreateMaybeMessage<::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk>(Arena*);
template<> ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult* Arena::CreateMaybeMessage<::yandex::cloud::ai::stt::v2::SpeechRecognitionResult>(Arena*);
template<> ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest* Arena::CreateMaybeMessage<::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest>(Arena*);
template<> ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse* Arena::CreateMaybeMessage<::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse>(Arena*);
template<> ::yandex::cloud::ai::stt::v2::WordInfo* Arena::CreateMaybeMessage<::yandex::cloud::ai::stt::v2::WordInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace yandex {
namespace cloud {
namespace ai {
namespace stt {
namespace v2 {

enum RecognitionSpec_AudioEncoding : int {
  RecognitionSpec_AudioEncoding_AUDIO_ENCODING_UNSPECIFIED = 0,
  RecognitionSpec_AudioEncoding_LINEAR16_PCM = 1,
  RecognitionSpec_AudioEncoding_OGG_OPUS = 2,
  RecognitionSpec_AudioEncoding_RecognitionSpec_AudioEncoding_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  RecognitionSpec_AudioEncoding_RecognitionSpec_AudioEncoding_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool RecognitionSpec_AudioEncoding_IsValid(int value);
constexpr RecognitionSpec_AudioEncoding RecognitionSpec_AudioEncoding_AudioEncoding_MIN = RecognitionSpec_AudioEncoding_AUDIO_ENCODING_UNSPECIFIED;
constexpr RecognitionSpec_AudioEncoding RecognitionSpec_AudioEncoding_AudioEncoding_MAX = RecognitionSpec_AudioEncoding_OGG_OPUS;
constexpr int RecognitionSpec_AudioEncoding_AudioEncoding_ARRAYSIZE = RecognitionSpec_AudioEncoding_AudioEncoding_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RecognitionSpec_AudioEncoding_descriptor();
template<typename T>
inline const std::string& RecognitionSpec_AudioEncoding_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RecognitionSpec_AudioEncoding>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RecognitionSpec_AudioEncoding_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RecognitionSpec_AudioEncoding_descriptor(), enum_t_value);
}
inline bool RecognitionSpec_AudioEncoding_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, RecognitionSpec_AudioEncoding* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RecognitionSpec_AudioEncoding>(
    RecognitionSpec_AudioEncoding_descriptor(), name, value);
}
// ===================================================================

class LongRunningRecognitionRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest) */ {
 public:
  inline LongRunningRecognitionRequest() : LongRunningRecognitionRequest(nullptr) {}
  virtual ~LongRunningRecognitionRequest();
  explicit constexpr LongRunningRecognitionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LongRunningRecognitionRequest(const LongRunningRecognitionRequest& from);
  LongRunningRecognitionRequest(LongRunningRecognitionRequest&& from) noexcept
    : LongRunningRecognitionRequest() {
    *this = ::std::move(from);
  }

  inline LongRunningRecognitionRequest& operator=(const LongRunningRecognitionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LongRunningRecognitionRequest& operator=(LongRunningRecognitionRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LongRunningRecognitionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LongRunningRecognitionRequest* internal_default_instance() {
    return reinterpret_cast<const LongRunningRecognitionRequest*>(
               &_LongRunningRecognitionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LongRunningRecognitionRequest& a, LongRunningRecognitionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LongRunningRecognitionRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LongRunningRecognitionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LongRunningRecognitionRequest* New() const final {
    return CreateMaybeMessage<LongRunningRecognitionRequest>(nullptr);
  }

  LongRunningRecognitionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LongRunningRecognitionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LongRunningRecognitionRequest& from);
  void MergeFrom(const LongRunningRecognitionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LongRunningRecognitionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest";
  }
  protected:
  explicit LongRunningRecognitionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFieldNumber = 1,
    kAudioFieldNumber = 2,
  };
  // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
  bool has_config() const;
  private:
  bool _internal_has_config() const;
  public:
  void clear_config();
  const ::yandex::cloud::ai::stt::v2::RecognitionConfig& config() const;
  ::yandex::cloud::ai::stt::v2::RecognitionConfig* release_config();
  ::yandex::cloud::ai::stt::v2::RecognitionConfig* mutable_config();
  void set_allocated_config(::yandex::cloud::ai::stt::v2::RecognitionConfig* config);
  private:
  const ::yandex::cloud::ai::stt::v2::RecognitionConfig& _internal_config() const;
  ::yandex::cloud::ai::stt::v2::RecognitionConfig* _internal_mutable_config();
  public:
  void unsafe_arena_set_allocated_config(
      ::yandex::cloud::ai::stt::v2::RecognitionConfig* config);
  ::yandex::cloud::ai::stt::v2::RecognitionConfig* unsafe_arena_release_config();

  // .yandex.cloud.ai.stt.v2.RecognitionAudio audio = 2;
  bool has_audio() const;
  private:
  bool _internal_has_audio() const;
  public:
  void clear_audio();
  const ::yandex::cloud::ai::stt::v2::RecognitionAudio& audio() const;
  ::yandex::cloud::ai::stt::v2::RecognitionAudio* release_audio();
  ::yandex::cloud::ai::stt::v2::RecognitionAudio* mutable_audio();
  void set_allocated_audio(::yandex::cloud::ai::stt::v2::RecognitionAudio* audio);
  private:
  const ::yandex::cloud::ai::stt::v2::RecognitionAudio& _internal_audio() const;
  ::yandex::cloud::ai::stt::v2::RecognitionAudio* _internal_mutable_audio();
  public:
  void unsafe_arena_set_allocated_audio(
      ::yandex::cloud::ai::stt::v2::RecognitionAudio* audio);
  ::yandex::cloud::ai::stt::v2::RecognitionAudio* unsafe_arena_release_audio();

  // @@protoc_insertion_point(class_scope:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::yandex::cloud::ai::stt::v2::RecognitionConfig* config_;
  ::yandex::cloud::ai::stt::v2::RecognitionAudio* audio_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
};
// -------------------------------------------------------------------

class LongRunningRecognitionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse) */ {
 public:
  inline LongRunningRecognitionResponse() : LongRunningRecognitionResponse(nullptr) {}
  virtual ~LongRunningRecognitionResponse();
  explicit constexpr LongRunningRecognitionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LongRunningRecognitionResponse(const LongRunningRecognitionResponse& from);
  LongRunningRecognitionResponse(LongRunningRecognitionResponse&& from) noexcept
    : LongRunningRecognitionResponse() {
    *this = ::std::move(from);
  }

  inline LongRunningRecognitionResponse& operator=(const LongRunningRecognitionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LongRunningRecognitionResponse& operator=(LongRunningRecognitionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LongRunningRecognitionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LongRunningRecognitionResponse* internal_default_instance() {
    return reinterpret_cast<const LongRunningRecognitionResponse*>(
               &_LongRunningRecognitionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LongRunningRecognitionResponse& a, LongRunningRecognitionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LongRunningRecognitionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LongRunningRecognitionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LongRunningRecognitionResponse* New() const final {
    return CreateMaybeMessage<LongRunningRecognitionResponse>(nullptr);
  }

  LongRunningRecognitionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LongRunningRecognitionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LongRunningRecognitionResponse& from);
  void MergeFrom(const LongRunningRecognitionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LongRunningRecognitionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse";
  }
  protected:
  explicit LongRunningRecognitionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChunksFieldNumber = 1,
  };
  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionResult chunks = 1;
  int chunks_size() const;
  private:
  int _internal_chunks_size() const;
  public:
  void clear_chunks();
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult* mutable_chunks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult >*
      mutable_chunks();
  private:
  const ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult& _internal_chunks(int index) const;
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult* _internal_add_chunks();
  public:
  const ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult& chunks(int index) const;
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult* add_chunks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult >&
      chunks() const;

  // @@protoc_insertion_point(class_scope:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult > chunks_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
};
// -------------------------------------------------------------------

class StreamingRecognitionRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest) */ {
 public:
  inline StreamingRecognitionRequest() : StreamingRecognitionRequest(nullptr) {}
  virtual ~StreamingRecognitionRequest();
  explicit constexpr StreamingRecognitionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StreamingRecognitionRequest(const StreamingRecognitionRequest& from);
  StreamingRecognitionRequest(StreamingRecognitionRequest&& from) noexcept
    : StreamingRecognitionRequest() {
    *this = ::std::move(from);
  }

  inline StreamingRecognitionRequest& operator=(const StreamingRecognitionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamingRecognitionRequest& operator=(StreamingRecognitionRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StreamingRecognitionRequest& default_instance() {
    return *internal_default_instance();
  }
  enum StreamingRequestCase {
    kConfig = 1,
    kAudioContent = 2,
    STREAMING_REQUEST_NOT_SET = 0,
  };

  static inline const StreamingRecognitionRequest* internal_default_instance() {
    return reinterpret_cast<const StreamingRecognitionRequest*>(
               &_StreamingRecognitionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(StreamingRecognitionRequest& a, StreamingRecognitionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamingRecognitionRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamingRecognitionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StreamingRecognitionRequest* New() const final {
    return CreateMaybeMessage<StreamingRecognitionRequest>(nullptr);
  }

  StreamingRecognitionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StreamingRecognitionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StreamingRecognitionRequest& from);
  void MergeFrom(const StreamingRecognitionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StreamingRecognitionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.ai.stt.v2.StreamingRecognitionRequest";
  }
  protected:
  explicit StreamingRecognitionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFieldNumber = 1,
    kAudioContentFieldNumber = 2,
  };
  // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
  bool has_config() const;
  private:
  bool _internal_has_config() const;
  public:
  void clear_config();
  const ::yandex::cloud::ai::stt::v2::RecognitionConfig& config() const;
  ::yandex::cloud::ai::stt::v2::RecognitionConfig* release_config();
  ::yandex::cloud::ai::stt::v2::RecognitionConfig* mutable_config();
  void set_allocated_config(::yandex::cloud::ai::stt::v2::RecognitionConfig* config);
  private:
  const ::yandex::cloud::ai::stt::v2::RecognitionConfig& _internal_config() const;
  ::yandex::cloud::ai::stt::v2::RecognitionConfig* _internal_mutable_config();
  public:
  void unsafe_arena_set_allocated_config(
      ::yandex::cloud::ai::stt::v2::RecognitionConfig* config);
  ::yandex::cloud::ai::stt::v2::RecognitionConfig* unsafe_arena_release_config();

  // bytes audio_content = 2;
  bool has_audio_content() const;
  private:
  bool _internal_has_audio_content() const;
  public:
  void clear_audio_content();
  const std::string& audio_content() const;
  void set_audio_content(const std::string& value);
  void set_audio_content(std::string&& value);
  void set_audio_content(const char* value);
  void set_audio_content(const void* value, size_t size);
  std::string* mutable_audio_content();
  std::string* release_audio_content();
  void set_allocated_audio_content(std::string* audio_content);
  private:
  const std::string& _internal_audio_content() const;
  void _internal_set_audio_content(const std::string& value);
  std::string* _internal_mutable_audio_content();
  public:

  void clear_streaming_request();
  StreamingRequestCase streaming_request_case() const;
  // @@protoc_insertion_point(class_scope:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
 private:
  class _Internal;
  void set_has_config();
  void set_has_audio_content();

  inline bool has_streaming_request() const;
  inline void clear_has_streaming_request();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union StreamingRequestUnion {
    constexpr StreamingRequestUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::yandex::cloud::ai::stt::v2::RecognitionConfig* config_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr audio_content_;
  } streaming_request_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
};
// -------------------------------------------------------------------

class StreamingRecognitionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse) */ {
 public:
  inline StreamingRecognitionResponse() : StreamingRecognitionResponse(nullptr) {}
  virtual ~StreamingRecognitionResponse();
  explicit constexpr StreamingRecognitionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StreamingRecognitionResponse(const StreamingRecognitionResponse& from);
  StreamingRecognitionResponse(StreamingRecognitionResponse&& from) noexcept
    : StreamingRecognitionResponse() {
    *this = ::std::move(from);
  }

  inline StreamingRecognitionResponse& operator=(const StreamingRecognitionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamingRecognitionResponse& operator=(StreamingRecognitionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StreamingRecognitionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamingRecognitionResponse* internal_default_instance() {
    return reinterpret_cast<const StreamingRecognitionResponse*>(
               &_StreamingRecognitionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(StreamingRecognitionResponse& a, StreamingRecognitionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamingRecognitionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamingRecognitionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StreamingRecognitionResponse* New() const final {
    return CreateMaybeMessage<StreamingRecognitionResponse>(nullptr);
  }

  StreamingRecognitionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StreamingRecognitionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StreamingRecognitionResponse& from);
  void MergeFrom(const StreamingRecognitionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StreamingRecognitionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.ai.stt.v2.StreamingRecognitionResponse";
  }
  protected:
  explicit StreamingRecognitionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChunksFieldNumber = 1,
  };
  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionChunk chunks = 1;
  int chunks_size() const;
  private:
  int _internal_chunks_size() const;
  public:
  void clear_chunks();
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk* mutable_chunks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk >*
      mutable_chunks();
  private:
  const ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk& _internal_chunks(int index) const;
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk* _internal_add_chunks();
  public:
  const ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk& chunks(int index) const;
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk* add_chunks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk >&
      chunks() const;

  // @@protoc_insertion_point(class_scope:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk > chunks_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RecognitionAudio PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.ai.stt.v2.RecognitionAudio) */ {
 public:
  inline RecognitionAudio() : RecognitionAudio(nullptr) {}
  virtual ~RecognitionAudio();
  explicit constexpr RecognitionAudio(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RecognitionAudio(const RecognitionAudio& from);
  RecognitionAudio(RecognitionAudio&& from) noexcept
    : RecognitionAudio() {
    *this = ::std::move(from);
  }

  inline RecognitionAudio& operator=(const RecognitionAudio& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecognitionAudio& operator=(RecognitionAudio&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RecognitionAudio& default_instance() {
    return *internal_default_instance();
  }
  enum AudioSourceCase {
    kContent = 1,
    kUri = 2,
    AUDIO_SOURCE_NOT_SET = 0,
  };

  static inline const RecognitionAudio* internal_default_instance() {
    return reinterpret_cast<const RecognitionAudio*>(
               &_RecognitionAudio_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RecognitionAudio& a, RecognitionAudio& b) {
    a.Swap(&b);
  }
  inline void Swap(RecognitionAudio* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecognitionAudio* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RecognitionAudio* New() const final {
    return CreateMaybeMessage<RecognitionAudio>(nullptr);
  }

  RecognitionAudio* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RecognitionAudio>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RecognitionAudio& from);
  void MergeFrom(const RecognitionAudio& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecognitionAudio* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.ai.stt.v2.RecognitionAudio";
  }
  protected:
  explicit RecognitionAudio(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentFieldNumber = 1,
    kUriFieldNumber = 2,
  };
  // bytes content = 1;
  bool has_content() const;
  private:
  bool _internal_has_content() const;
  public:
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // string uri = 2;
  bool has_uri() const;
  private:
  bool _internal_has_uri() const;
  public:
  void clear_uri();
  const std::string& uri() const;
  void set_uri(const std::string& value);
  void set_uri(std::string&& value);
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  std::string* mutable_uri();
  std::string* release_uri();
  void set_allocated_uri(std::string* uri);
  private:
  const std::string& _internal_uri() const;
  void _internal_set_uri(const std::string& value);
  std::string* _internal_mutable_uri();
  public:

  void clear_audio_source();
  AudioSourceCase audio_source_case() const;
  // @@protoc_insertion_point(class_scope:yandex.cloud.ai.stt.v2.RecognitionAudio)
 private:
  class _Internal;
  void set_has_content();
  void set_has_uri();

  inline bool has_audio_source() const;
  inline void clear_has_audio_source();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union AudioSourceUnion {
    constexpr AudioSourceUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr uri_;
  } audio_source_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RecognitionConfig PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.ai.stt.v2.RecognitionConfig) */ {
 public:
  inline RecognitionConfig() : RecognitionConfig(nullptr) {}
  virtual ~RecognitionConfig();
  explicit constexpr RecognitionConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RecognitionConfig(const RecognitionConfig& from);
  RecognitionConfig(RecognitionConfig&& from) noexcept
    : RecognitionConfig() {
    *this = ::std::move(from);
  }

  inline RecognitionConfig& operator=(const RecognitionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecognitionConfig& operator=(RecognitionConfig&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RecognitionConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecognitionConfig* internal_default_instance() {
    return reinterpret_cast<const RecognitionConfig*>(
               &_RecognitionConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RecognitionConfig& a, RecognitionConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(RecognitionConfig* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecognitionConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RecognitionConfig* New() const final {
    return CreateMaybeMessage<RecognitionConfig>(nullptr);
  }

  RecognitionConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RecognitionConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RecognitionConfig& from);
  void MergeFrom(const RecognitionConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecognitionConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.ai.stt.v2.RecognitionConfig";
  }
  protected:
  explicit RecognitionConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFolderIdFieldNumber = 2,
    kSpecificationFieldNumber = 1,
  };
  // string folder_id = 2;
  void clear_folder_id();
  const std::string& folder_id() const;
  void set_folder_id(const std::string& value);
  void set_folder_id(std::string&& value);
  void set_folder_id(const char* value);
  void set_folder_id(const char* value, size_t size);
  std::string* mutable_folder_id();
  std::string* release_folder_id();
  void set_allocated_folder_id(std::string* folder_id);
  private:
  const std::string& _internal_folder_id() const;
  void _internal_set_folder_id(const std::string& value);
  std::string* _internal_mutable_folder_id();
  public:

  // .yandex.cloud.ai.stt.v2.RecognitionSpec specification = 1;
  bool has_specification() const;
  private:
  bool _internal_has_specification() const;
  public:
  void clear_specification();
  const ::yandex::cloud::ai::stt::v2::RecognitionSpec& specification() const;
  ::yandex::cloud::ai::stt::v2::RecognitionSpec* release_specification();
  ::yandex::cloud::ai::stt::v2::RecognitionSpec* mutable_specification();
  void set_allocated_specification(::yandex::cloud::ai::stt::v2::RecognitionSpec* specification);
  private:
  const ::yandex::cloud::ai::stt::v2::RecognitionSpec& _internal_specification() const;
  ::yandex::cloud::ai::stt::v2::RecognitionSpec* _internal_mutable_specification();
  public:
  void unsafe_arena_set_allocated_specification(
      ::yandex::cloud::ai::stt::v2::RecognitionSpec* specification);
  ::yandex::cloud::ai::stt::v2::RecognitionSpec* unsafe_arena_release_specification();

  // @@protoc_insertion_point(class_scope:yandex.cloud.ai.stt.v2.RecognitionConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr folder_id_;
  ::yandex::cloud::ai::stt::v2::RecognitionSpec* specification_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RecognitionSpec PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.ai.stt.v2.RecognitionSpec) */ {
 public:
  inline RecognitionSpec() : RecognitionSpec(nullptr) {}
  virtual ~RecognitionSpec();
  explicit constexpr RecognitionSpec(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RecognitionSpec(const RecognitionSpec& from);
  RecognitionSpec(RecognitionSpec&& from) noexcept
    : RecognitionSpec() {
    *this = ::std::move(from);
  }

  inline RecognitionSpec& operator=(const RecognitionSpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecognitionSpec& operator=(RecognitionSpec&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RecognitionSpec& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecognitionSpec* internal_default_instance() {
    return reinterpret_cast<const RecognitionSpec*>(
               &_RecognitionSpec_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(RecognitionSpec& a, RecognitionSpec& b) {
    a.Swap(&b);
  }
  inline void Swap(RecognitionSpec* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecognitionSpec* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RecognitionSpec* New() const final {
    return CreateMaybeMessage<RecognitionSpec>(nullptr);
  }

  RecognitionSpec* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RecognitionSpec>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RecognitionSpec& from);
  void MergeFrom(const RecognitionSpec& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecognitionSpec* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.ai.stt.v2.RecognitionSpec";
  }
  protected:
  explicit RecognitionSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef RecognitionSpec_AudioEncoding AudioEncoding;
  static constexpr AudioEncoding AUDIO_ENCODING_UNSPECIFIED =
    RecognitionSpec_AudioEncoding_AUDIO_ENCODING_UNSPECIFIED;
  static constexpr AudioEncoding LINEAR16_PCM =
    RecognitionSpec_AudioEncoding_LINEAR16_PCM;
  static constexpr AudioEncoding OGG_OPUS =
    RecognitionSpec_AudioEncoding_OGG_OPUS;
  static inline bool AudioEncoding_IsValid(int value) {
    return RecognitionSpec_AudioEncoding_IsValid(value);
  }
  static constexpr AudioEncoding AudioEncoding_MIN =
    RecognitionSpec_AudioEncoding_AudioEncoding_MIN;
  static constexpr AudioEncoding AudioEncoding_MAX =
    RecognitionSpec_AudioEncoding_AudioEncoding_MAX;
  static constexpr int AudioEncoding_ARRAYSIZE =
    RecognitionSpec_AudioEncoding_AudioEncoding_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  AudioEncoding_descriptor() {
    return RecognitionSpec_AudioEncoding_descriptor();
  }
  template<typename T>
  static inline const std::string& AudioEncoding_Name(T enum_t_value) {
    static_assert(::std::is_same<T, AudioEncoding>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function AudioEncoding_Name.");
    return RecognitionSpec_AudioEncoding_Name(enum_t_value);
  }
  static inline bool AudioEncoding_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      AudioEncoding* value) {
    return RecognitionSpec_AudioEncoding_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kLanguageCodeFieldNumber = 3,
    kModelFieldNumber = 5,
    kSampleRateHertzFieldNumber = 2,
    kAudioEncodingFieldNumber = 1,
    kProfanityFilterFieldNumber = 4,
    kPartialResultsFieldNumber = 7,
    kSingleUtteranceFieldNumber = 8,
    kRawResultsFieldNumber = 10,
    kAudioChannelCountFieldNumber = 9,
  };
  // string language_code = 3;
  void clear_language_code();
  const std::string& language_code() const;
  void set_language_code(const std::string& value);
  void set_language_code(std::string&& value);
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  std::string* mutable_language_code();
  std::string* release_language_code();
  void set_allocated_language_code(std::string* language_code);
  private:
  const std::string& _internal_language_code() const;
  void _internal_set_language_code(const std::string& value);
  std::string* _internal_mutable_language_code();
  public:

  // string model = 5;
  void clear_model();
  const std::string& model() const;
  void set_model(const std::string& value);
  void set_model(std::string&& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  std::string* mutable_model();
  std::string* release_model();
  void set_allocated_model(std::string* model);
  private:
  const std::string& _internal_model() const;
  void _internal_set_model(const std::string& value);
  std::string* _internal_mutable_model();
  public:

  // int64 sample_rate_hertz = 2;
  void clear_sample_rate_hertz();
  ::PROTOBUF_NAMESPACE_ID::int64 sample_rate_hertz() const;
  void set_sample_rate_hertz(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_sample_rate_hertz() const;
  void _internal_set_sample_rate_hertz(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // .yandex.cloud.ai.stt.v2.RecognitionSpec.AudioEncoding audio_encoding = 1;
  void clear_audio_encoding();
  ::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding audio_encoding() const;
  void set_audio_encoding(::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding value);
  private:
  ::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding _internal_audio_encoding() const;
  void _internal_set_audio_encoding(::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding value);
  public:

  // bool profanity_filter = 4;
  void clear_profanity_filter();
  bool profanity_filter() const;
  void set_profanity_filter(bool value);
  private:
  bool _internal_profanity_filter() const;
  void _internal_set_profanity_filter(bool value);
  public:

  // bool partial_results = 7;
  void clear_partial_results();
  bool partial_results() const;
  void set_partial_results(bool value);
  private:
  bool _internal_partial_results() const;
  void _internal_set_partial_results(bool value);
  public:

  // bool single_utterance = 8;
  void clear_single_utterance();
  bool single_utterance() const;
  void set_single_utterance(bool value);
  private:
  bool _internal_single_utterance() const;
  void _internal_set_single_utterance(bool value);
  public:

  // bool raw_results = 10;
  void clear_raw_results();
  bool raw_results() const;
  void set_raw_results(bool value);
  private:
  bool _internal_raw_results() const;
  void _internal_set_raw_results(bool value);
  public:

  // int64 audio_channel_count = 9;
  void clear_audio_channel_count();
  ::PROTOBUF_NAMESPACE_ID::int64 audio_channel_count() const;
  void set_audio_channel_count(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_audio_channel_count() const;
  void _internal_set_audio_channel_count(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:yandex.cloud.ai.stt.v2.RecognitionSpec)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr language_code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_;
  ::PROTOBUF_NAMESPACE_ID::int64 sample_rate_hertz_;
  int audio_encoding_;
  bool profanity_filter_;
  bool partial_results_;
  bool single_utterance_;
  bool raw_results_;
  ::PROTOBUF_NAMESPACE_ID::int64 audio_channel_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SpeechRecognitionChunk PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk) */ {
 public:
  inline SpeechRecognitionChunk() : SpeechRecognitionChunk(nullptr) {}
  virtual ~SpeechRecognitionChunk();
  explicit constexpr SpeechRecognitionChunk(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpeechRecognitionChunk(const SpeechRecognitionChunk& from);
  SpeechRecognitionChunk(SpeechRecognitionChunk&& from) noexcept
    : SpeechRecognitionChunk() {
    *this = ::std::move(from);
  }

  inline SpeechRecognitionChunk& operator=(const SpeechRecognitionChunk& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpeechRecognitionChunk& operator=(SpeechRecognitionChunk&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SpeechRecognitionChunk& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpeechRecognitionChunk* internal_default_instance() {
    return reinterpret_cast<const SpeechRecognitionChunk*>(
               &_SpeechRecognitionChunk_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SpeechRecognitionChunk& a, SpeechRecognitionChunk& b) {
    a.Swap(&b);
  }
  inline void Swap(SpeechRecognitionChunk* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpeechRecognitionChunk* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpeechRecognitionChunk* New() const final {
    return CreateMaybeMessage<SpeechRecognitionChunk>(nullptr);
  }

  SpeechRecognitionChunk* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpeechRecognitionChunk>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SpeechRecognitionChunk& from);
  void MergeFrom(const SpeechRecognitionChunk& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpeechRecognitionChunk* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.ai.stt.v2.SpeechRecognitionChunk";
  }
  protected:
  explicit SpeechRecognitionChunk(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAlternativesFieldNumber = 1,
    kFinalFieldNumber = 2,
    kEndOfUtteranceFieldNumber = 3,
  };
  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  int alternatives_size() const;
  private:
  int _internal_alternatives_size() const;
  public:
  void clear_alternatives();
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* mutable_alternatives(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >*
      mutable_alternatives();
  private:
  const ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative& _internal_alternatives(int index) const;
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* _internal_add_alternatives();
  public:
  const ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative& alternatives(int index) const;
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* add_alternatives();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >&
      alternatives() const;

  // bool final = 2;
  void clear_final();
  bool final() const;
  void set_final(bool value);
  private:
  bool _internal_final() const;
  void _internal_set_final(bool value);
  public:

  // bool end_of_utterance = 3;
  void clear_end_of_utterance();
  bool end_of_utterance() const;
  void set_end_of_utterance(bool value);
  private:
  bool _internal_end_of_utterance() const;
  void _internal_set_end_of_utterance(bool value);
  public:

  // @@protoc_insertion_point(class_scope:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative > alternatives_;
  bool final_;
  bool end_of_utterance_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SpeechRecognitionResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.ai.stt.v2.SpeechRecognitionResult) */ {
 public:
  inline SpeechRecognitionResult() : SpeechRecognitionResult(nullptr) {}
  virtual ~SpeechRecognitionResult();
  explicit constexpr SpeechRecognitionResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpeechRecognitionResult(const SpeechRecognitionResult& from);
  SpeechRecognitionResult(SpeechRecognitionResult&& from) noexcept
    : SpeechRecognitionResult() {
    *this = ::std::move(from);
  }

  inline SpeechRecognitionResult& operator=(const SpeechRecognitionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpeechRecognitionResult& operator=(SpeechRecognitionResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SpeechRecognitionResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpeechRecognitionResult* internal_default_instance() {
    return reinterpret_cast<const SpeechRecognitionResult*>(
               &_SpeechRecognitionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SpeechRecognitionResult& a, SpeechRecognitionResult& b) {
    a.Swap(&b);
  }
  inline void Swap(SpeechRecognitionResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpeechRecognitionResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpeechRecognitionResult* New() const final {
    return CreateMaybeMessage<SpeechRecognitionResult>(nullptr);
  }

  SpeechRecognitionResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpeechRecognitionResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SpeechRecognitionResult& from);
  void MergeFrom(const SpeechRecognitionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpeechRecognitionResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.ai.stt.v2.SpeechRecognitionResult";
  }
  protected:
  explicit SpeechRecognitionResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAlternativesFieldNumber = 1,
    kChannelTagFieldNumber = 2,
  };
  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  int alternatives_size() const;
  private:
  int _internal_alternatives_size() const;
  public:
  void clear_alternatives();
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* mutable_alternatives(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >*
      mutable_alternatives();
  private:
  const ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative& _internal_alternatives(int index) const;
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* _internal_add_alternatives();
  public:
  const ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative& alternatives(int index) const;
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* add_alternatives();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >&
      alternatives() const;

  // int64 channel_tag = 2;
  void clear_channel_tag();
  ::PROTOBUF_NAMESPACE_ID::int64 channel_tag() const;
  void set_channel_tag(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_channel_tag() const;
  void _internal_set_channel_tag(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative > alternatives_;
  ::PROTOBUF_NAMESPACE_ID::int64 channel_tag_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SpeechRecognitionAlternative PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative) */ {
 public:
  inline SpeechRecognitionAlternative() : SpeechRecognitionAlternative(nullptr) {}
  virtual ~SpeechRecognitionAlternative();
  explicit constexpr SpeechRecognitionAlternative(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpeechRecognitionAlternative(const SpeechRecognitionAlternative& from);
  SpeechRecognitionAlternative(SpeechRecognitionAlternative&& from) noexcept
    : SpeechRecognitionAlternative() {
    *this = ::std::move(from);
  }

  inline SpeechRecognitionAlternative& operator=(const SpeechRecognitionAlternative& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpeechRecognitionAlternative& operator=(SpeechRecognitionAlternative&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SpeechRecognitionAlternative& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpeechRecognitionAlternative* internal_default_instance() {
    return reinterpret_cast<const SpeechRecognitionAlternative*>(
               &_SpeechRecognitionAlternative_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SpeechRecognitionAlternative& a, SpeechRecognitionAlternative& b) {
    a.Swap(&b);
  }
  inline void Swap(SpeechRecognitionAlternative* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpeechRecognitionAlternative* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpeechRecognitionAlternative* New() const final {
    return CreateMaybeMessage<SpeechRecognitionAlternative>(nullptr);
  }

  SpeechRecognitionAlternative* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpeechRecognitionAlternative>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SpeechRecognitionAlternative& from);
  void MergeFrom(const SpeechRecognitionAlternative& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpeechRecognitionAlternative* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative";
  }
  protected:
  explicit SpeechRecognitionAlternative(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWordsFieldNumber = 3,
    kTextFieldNumber = 1,
    kConfidenceFieldNumber = 2,
  };
  // repeated .yandex.cloud.ai.stt.v2.WordInfo words = 3;
  int words_size() const;
  private:
  int _internal_words_size() const;
  public:
  void clear_words();
  ::yandex::cloud::ai::stt::v2::WordInfo* mutable_words(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::WordInfo >*
      mutable_words();
  private:
  const ::yandex::cloud::ai::stt::v2::WordInfo& _internal_words(int index) const;
  ::yandex::cloud::ai::stt::v2::WordInfo* _internal_add_words();
  public:
  const ::yandex::cloud::ai::stt::v2::WordInfo& words(int index) const;
  ::yandex::cloud::ai::stt::v2::WordInfo* add_words();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::WordInfo >&
      words() const;

  // string text = 1;
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // float confidence = 2;
  void clear_confidence();
  float confidence() const;
  void set_confidence(float value);
  private:
  float _internal_confidence() const;
  void _internal_set_confidence(float value);
  public:

  // @@protoc_insertion_point(class_scope:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::WordInfo > words_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  float confidence_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
};
// -------------------------------------------------------------------

class WordInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.ai.stt.v2.WordInfo) */ {
 public:
  inline WordInfo() : WordInfo(nullptr) {}
  virtual ~WordInfo();
  explicit constexpr WordInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  WordInfo(const WordInfo& from);
  WordInfo(WordInfo&& from) noexcept
    : WordInfo() {
    *this = ::std::move(from);
  }

  inline WordInfo& operator=(const WordInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline WordInfo& operator=(WordInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WordInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const WordInfo* internal_default_instance() {
    return reinterpret_cast<const WordInfo*>(
               &_WordInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(WordInfo& a, WordInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(WordInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WordInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WordInfo* New() const final {
    return CreateMaybeMessage<WordInfo>(nullptr);
  }

  WordInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WordInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WordInfo& from);
  void MergeFrom(const WordInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WordInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.ai.stt.v2.WordInfo";
  }
  protected:
  explicit WordInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWordFieldNumber = 3,
    kStartTimeFieldNumber = 1,
    kEndTimeFieldNumber = 2,
    kConfidenceFieldNumber = 4,
  };
  // string word = 3;
  void clear_word();
  const std::string& word() const;
  void set_word(const std::string& value);
  void set_word(std::string&& value);
  void set_word(const char* value);
  void set_word(const char* value, size_t size);
  std::string* mutable_word();
  std::string* release_word();
  void set_allocated_word(std::string* word);
  private:
  const std::string& _internal_word() const;
  void _internal_set_word(const std::string& value);
  std::string* _internal_mutable_word();
  public:

  // .google.protobuf.Duration start_time = 1;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  const PROTOBUF_NAMESPACE_ID::Duration& start_time() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_start_time();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_start_time();
  void set_allocated_start_time(PROTOBUF_NAMESPACE_ID::Duration* start_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_start_time() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_start_time();
  public:
  void unsafe_arena_set_allocated_start_time(
      PROTOBUF_NAMESPACE_ID::Duration* start_time);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_start_time();

  // .google.protobuf.Duration end_time = 2;
  bool has_end_time() const;
  private:
  bool _internal_has_end_time() const;
  public:
  void clear_end_time();
  const PROTOBUF_NAMESPACE_ID::Duration& end_time() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_end_time();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_end_time();
  void set_allocated_end_time(PROTOBUF_NAMESPACE_ID::Duration* end_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_end_time() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_end_time();
  public:
  void unsafe_arena_set_allocated_end_time(
      PROTOBUF_NAMESPACE_ID::Duration* end_time);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_end_time();

  // float confidence = 4;
  void clear_confidence();
  float confidence() const;
  void set_confidence(float value);
  private:
  float _internal_confidence() const;
  void _internal_set_confidence(float value);
  public:

  // @@protoc_insertion_point(class_scope:yandex.cloud.ai.stt.v2.WordInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr word_;
  PROTOBUF_NAMESPACE_ID::Duration* start_time_;
  PROTOBUF_NAMESPACE_ID::Duration* end_time_;
  float confidence_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LongRunningRecognitionRequest

// .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
inline bool LongRunningRecognitionRequest::_internal_has_config() const {
  return this != internal_default_instance() && config_ != nullptr;
}
inline bool LongRunningRecognitionRequest::has_config() const {
  return _internal_has_config();
}
inline void LongRunningRecognitionRequest::clear_config() {
  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
inline const ::yandex::cloud::ai::stt::v2::RecognitionConfig& LongRunningRecognitionRequest::_internal_config() const {
  const ::yandex::cloud::ai::stt::v2::RecognitionConfig* p = config_;
  return p != nullptr ? *p : reinterpret_cast<const ::yandex::cloud::ai::stt::v2::RecognitionConfig&>(
      ::yandex::cloud::ai::stt::v2::_RecognitionConfig_default_instance_);
}
inline const ::yandex::cloud::ai::stt::v2::RecognitionConfig& LongRunningRecognitionRequest::config() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest.config)
  return _internal_config();
}
inline void LongRunningRecognitionRequest::unsafe_arena_set_allocated_config(
    ::yandex::cloud::ai::stt::v2::RecognitionConfig* config) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest.config)
}
inline ::yandex::cloud::ai::stt::v2::RecognitionConfig* LongRunningRecognitionRequest::release_config() {
  
  ::yandex::cloud::ai::stt::v2::RecognitionConfig* temp = config_;
  config_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::yandex::cloud::ai::stt::v2::RecognitionConfig* LongRunningRecognitionRequest::unsafe_arena_release_config() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest.config)
  
  ::yandex::cloud::ai::stt::v2::RecognitionConfig* temp = config_;
  config_ = nullptr;
  return temp;
}
inline ::yandex::cloud::ai::stt::v2::RecognitionConfig* LongRunningRecognitionRequest::_internal_mutable_config() {
  
  if (config_ == nullptr) {
    auto* p = CreateMaybeMessage<::yandex::cloud::ai::stt::v2::RecognitionConfig>(GetArena());
    config_ = p;
  }
  return config_;
}
inline ::yandex::cloud::ai::stt::v2::RecognitionConfig* LongRunningRecognitionRequest::mutable_config() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest.config)
  return _internal_mutable_config();
}
inline void LongRunningRecognitionRequest::set_allocated_config(::yandex::cloud::ai::stt::v2::RecognitionConfig* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete config_;
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(config);
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest.config)
}

// .yandex.cloud.ai.stt.v2.RecognitionAudio audio = 2;
inline bool LongRunningRecognitionRequest::_internal_has_audio() const {
  return this != internal_default_instance() && audio_ != nullptr;
}
inline bool LongRunningRecognitionRequest::has_audio() const {
  return _internal_has_audio();
}
inline void LongRunningRecognitionRequest::clear_audio() {
  if (GetArena() == nullptr && audio_ != nullptr) {
    delete audio_;
  }
  audio_ = nullptr;
}
inline const ::yandex::cloud::ai::stt::v2::RecognitionAudio& LongRunningRecognitionRequest::_internal_audio() const {
  const ::yandex::cloud::ai::stt::v2::RecognitionAudio* p = audio_;
  return p != nullptr ? *p : reinterpret_cast<const ::yandex::cloud::ai::stt::v2::RecognitionAudio&>(
      ::yandex::cloud::ai::stt::v2::_RecognitionAudio_default_instance_);
}
inline const ::yandex::cloud::ai::stt::v2::RecognitionAudio& LongRunningRecognitionRequest::audio() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest.audio)
  return _internal_audio();
}
inline void LongRunningRecognitionRequest::unsafe_arena_set_allocated_audio(
    ::yandex::cloud::ai::stt::v2::RecognitionAudio* audio) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(audio_);
  }
  audio_ = audio;
  if (audio) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest.audio)
}
inline ::yandex::cloud::ai::stt::v2::RecognitionAudio* LongRunningRecognitionRequest::release_audio() {
  
  ::yandex::cloud::ai::stt::v2::RecognitionAudio* temp = audio_;
  audio_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::yandex::cloud::ai::stt::v2::RecognitionAudio* LongRunningRecognitionRequest::unsafe_arena_release_audio() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest.audio)
  
  ::yandex::cloud::ai::stt::v2::RecognitionAudio* temp = audio_;
  audio_ = nullptr;
  return temp;
}
inline ::yandex::cloud::ai::stt::v2::RecognitionAudio* LongRunningRecognitionRequest::_internal_mutable_audio() {
  
  if (audio_ == nullptr) {
    auto* p = CreateMaybeMessage<::yandex::cloud::ai::stt::v2::RecognitionAudio>(GetArena());
    audio_ = p;
  }
  return audio_;
}
inline ::yandex::cloud::ai::stt::v2::RecognitionAudio* LongRunningRecognitionRequest::mutable_audio() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest.audio)
  return _internal_mutable_audio();
}
inline void LongRunningRecognitionRequest::set_allocated_audio(::yandex::cloud::ai::stt::v2::RecognitionAudio* audio) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete audio_;
  }
  if (audio) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(audio);
    if (message_arena != submessage_arena) {
      audio = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, audio, submessage_arena);
    }
    
  } else {
    
  }
  audio_ = audio;
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest.audio)
}

// -------------------------------------------------------------------

// LongRunningRecognitionResponse

// repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionResult chunks = 1;
inline int LongRunningRecognitionResponse::_internal_chunks_size() const {
  return chunks_.size();
}
inline int LongRunningRecognitionResponse::chunks_size() const {
  return _internal_chunks_size();
}
inline void LongRunningRecognitionResponse::clear_chunks() {
  chunks_.Clear();
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult* LongRunningRecognitionResponse::mutable_chunks(int index) {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse.chunks)
  return chunks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult >*
LongRunningRecognitionResponse::mutable_chunks() {
  // @@protoc_insertion_point(field_mutable_list:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse.chunks)
  return &chunks_;
}
inline const ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult& LongRunningRecognitionResponse::_internal_chunks(int index) const {
  return chunks_.Get(index);
}
inline const ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult& LongRunningRecognitionResponse::chunks(int index) const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse.chunks)
  return _internal_chunks(index);
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult* LongRunningRecognitionResponse::_internal_add_chunks() {
  return chunks_.Add();
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult* LongRunningRecognitionResponse::add_chunks() {
  // @@protoc_insertion_point(field_add:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse.chunks)
  return _internal_add_chunks();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult >&
LongRunningRecognitionResponse::chunks() const {
  // @@protoc_insertion_point(field_list:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse.chunks)
  return chunks_;
}

// -------------------------------------------------------------------

// StreamingRecognitionRequest

// .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
inline bool StreamingRecognitionRequest::_internal_has_config() const {
  return streaming_request_case() == kConfig;
}
inline bool StreamingRecognitionRequest::has_config() const {
  return _internal_has_config();
}
inline void StreamingRecognitionRequest::set_has_config() {
  _oneof_case_[0] = kConfig;
}
inline void StreamingRecognitionRequest::clear_config() {
  if (_internal_has_config()) {
    if (GetArena() == nullptr) {
      delete streaming_request_.config_;
    }
    clear_has_streaming_request();
  }
}
inline ::yandex::cloud::ai::stt::v2::RecognitionConfig* StreamingRecognitionRequest::release_config() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.config)
  if (_internal_has_config()) {
    clear_has_streaming_request();
      ::yandex::cloud::ai::stt::v2::RecognitionConfig* temp = streaming_request_.config_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    streaming_request_.config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::yandex::cloud::ai::stt::v2::RecognitionConfig& StreamingRecognitionRequest::_internal_config() const {
  return _internal_has_config()
      ? *streaming_request_.config_
      : reinterpret_cast< ::yandex::cloud::ai::stt::v2::RecognitionConfig&>(::yandex::cloud::ai::stt::v2::_RecognitionConfig_default_instance_);
}
inline const ::yandex::cloud::ai::stt::v2::RecognitionConfig& StreamingRecognitionRequest::config() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.config)
  return _internal_config();
}
inline ::yandex::cloud::ai::stt::v2::RecognitionConfig* StreamingRecognitionRequest::unsafe_arena_release_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.config)
  if (_internal_has_config()) {
    clear_has_streaming_request();
    ::yandex::cloud::ai::stt::v2::RecognitionConfig* temp = streaming_request_.config_;
    streaming_request_.config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void StreamingRecognitionRequest::unsafe_arena_set_allocated_config(::yandex::cloud::ai::stt::v2::RecognitionConfig* config) {
  clear_streaming_request();
  if (config) {
    set_has_config();
    streaming_request_.config_ = config;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.config)
}
inline ::yandex::cloud::ai::stt::v2::RecognitionConfig* StreamingRecognitionRequest::_internal_mutable_config() {
  if (!_internal_has_config()) {
    clear_streaming_request();
    set_has_config();
    streaming_request_.config_ = CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::RecognitionConfig >(GetArena());
  }
  return streaming_request_.config_;
}
inline ::yandex::cloud::ai::stt::v2::RecognitionConfig* StreamingRecognitionRequest::mutable_config() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.config)
  return _internal_mutable_config();
}

// bytes audio_content = 2;
inline bool StreamingRecognitionRequest::_internal_has_audio_content() const {
  return streaming_request_case() == kAudioContent;
}
inline bool StreamingRecognitionRequest::has_audio_content() const {
  return _internal_has_audio_content();
}
inline void StreamingRecognitionRequest::set_has_audio_content() {
  _oneof_case_[0] = kAudioContent;
}
inline void StreamingRecognitionRequest::clear_audio_content() {
  if (_internal_has_audio_content()) {
    streaming_request_.audio_content_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
    clear_has_streaming_request();
  }
}
inline const std::string& StreamingRecognitionRequest::audio_content() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.audio_content)
  return _internal_audio_content();
}
inline void StreamingRecognitionRequest::set_audio_content(const std::string& value) {
  _internal_set_audio_content(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.audio_content)
}
inline std::string* StreamingRecognitionRequest::mutable_audio_content() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.audio_content)
  return _internal_mutable_audio_content();
}
inline const std::string& StreamingRecognitionRequest::_internal_audio_content() const {
  if (_internal_has_audio_content()) {
    return streaming_request_.audio_content_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void StreamingRecognitionRequest::_internal_set_audio_content(const std::string& value) {
  if (!_internal_has_audio_content()) {
    clear_streaming_request();
    set_has_audio_content();
    streaming_request_.audio_content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  streaming_request_.audio_content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StreamingRecognitionRequest::set_audio_content(std::string&& value) {
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.audio_content)
  if (!_internal_has_audio_content()) {
    clear_streaming_request();
    set_has_audio_content();
    streaming_request_.audio_content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  streaming_request_.audio_content_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.audio_content)
}
inline void StreamingRecognitionRequest::set_audio_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!_internal_has_audio_content()) {
    clear_streaming_request();
    set_has_audio_content();
    streaming_request_.audio_content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  streaming_request_.audio_content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{},
      ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.audio_content)
}
inline void StreamingRecognitionRequest::set_audio_content(const void* value,
                             size_t size) {
  if (!_internal_has_audio_content()) {
    clear_streaming_request();
    set_has_audio_content();
    streaming_request_.audio_content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  streaming_request_.audio_content_.Set(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArena());
  // @@protoc_insertion_point(field_set_pointer:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.audio_content)
}
inline std::string* StreamingRecognitionRequest::_internal_mutable_audio_content() {
  if (!_internal_has_audio_content()) {
    clear_streaming_request();
    set_has_audio_content();
    streaming_request_.audio_content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return streaming_request_.audio_content_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StreamingRecognitionRequest::release_audio_content() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.audio_content)
  if (_internal_has_audio_content()) {
    clear_has_streaming_request();
    return streaming_request_.audio_content_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  } else {
    return nullptr;
  }
}
inline void StreamingRecognitionRequest::set_allocated_audio_content(std::string* audio_content) {
  if (has_streaming_request()) {
    clear_streaming_request();
  }
  if (audio_content != nullptr) {
    set_has_audio_content();
    streaming_request_.audio_content_.UnsafeSetDefault(audio_content);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(audio_content);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.audio_content)
}

inline bool StreamingRecognitionRequest::has_streaming_request() const {
  return streaming_request_case() != STREAMING_REQUEST_NOT_SET;
}
inline void StreamingRecognitionRequest::clear_has_streaming_request() {
  _oneof_case_[0] = STREAMING_REQUEST_NOT_SET;
}
inline StreamingRecognitionRequest::StreamingRequestCase StreamingRecognitionRequest::streaming_request_case() const {
  return StreamingRecognitionRequest::StreamingRequestCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// StreamingRecognitionResponse

// repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionChunk chunks = 1;
inline int StreamingRecognitionResponse::_internal_chunks_size() const {
  return chunks_.size();
}
inline int StreamingRecognitionResponse::chunks_size() const {
  return _internal_chunks_size();
}
inline void StreamingRecognitionResponse::clear_chunks() {
  chunks_.Clear();
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk* StreamingRecognitionResponse::mutable_chunks(int index) {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse.chunks)
  return chunks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk >*
StreamingRecognitionResponse::mutable_chunks() {
  // @@protoc_insertion_point(field_mutable_list:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse.chunks)
  return &chunks_;
}
inline const ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk& StreamingRecognitionResponse::_internal_chunks(int index) const {
  return chunks_.Get(index);
}
inline const ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk& StreamingRecognitionResponse::chunks(int index) const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse.chunks)
  return _internal_chunks(index);
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk* StreamingRecognitionResponse::_internal_add_chunks() {
  return chunks_.Add();
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk* StreamingRecognitionResponse::add_chunks() {
  // @@protoc_insertion_point(field_add:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse.chunks)
  return _internal_add_chunks();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk >&
StreamingRecognitionResponse::chunks() const {
  // @@protoc_insertion_point(field_list:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse.chunks)
  return chunks_;
}

// -------------------------------------------------------------------

// RecognitionAudio

// bytes content = 1;
inline bool RecognitionAudio::_internal_has_content() const {
  return audio_source_case() == kContent;
}
inline bool RecognitionAudio::has_content() const {
  return _internal_has_content();
}
inline void RecognitionAudio::set_has_content() {
  _oneof_case_[0] = kContent;
}
inline void RecognitionAudio::clear_content() {
  if (_internal_has_content()) {
    audio_source_.content_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
    clear_has_audio_source();
  }
}
inline const std::string& RecognitionAudio::content() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionAudio.content)
  return _internal_content();
}
inline void RecognitionAudio::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionAudio.content)
}
inline std::string* RecognitionAudio::mutable_content() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.RecognitionAudio.content)
  return _internal_mutable_content();
}
inline const std::string& RecognitionAudio::_internal_content() const {
  if (_internal_has_content()) {
    return audio_source_.content_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void RecognitionAudio::_internal_set_content(const std::string& value) {
  if (!_internal_has_content()) {
    clear_audio_source();
    set_has_content();
    audio_source_.content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  audio_source_.content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void RecognitionAudio::set_content(std::string&& value) {
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionAudio.content)
  if (!_internal_has_content()) {
    clear_audio_source();
    set_has_content();
    audio_source_.content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  audio_source_.content_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:yandex.cloud.ai.stt.v2.RecognitionAudio.content)
}
inline void RecognitionAudio::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!_internal_has_content()) {
    clear_audio_source();
    set_has_content();
    audio_source_.content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  audio_source_.content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{},
      ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:yandex.cloud.ai.stt.v2.RecognitionAudio.content)
}
inline void RecognitionAudio::set_content(const void* value,
                             size_t size) {
  if (!_internal_has_content()) {
    clear_audio_source();
    set_has_content();
    audio_source_.content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  audio_source_.content_.Set(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArena());
  // @@protoc_insertion_point(field_set_pointer:yandex.cloud.ai.stt.v2.RecognitionAudio.content)
}
inline std::string* RecognitionAudio::_internal_mutable_content() {
  if (!_internal_has_content()) {
    clear_audio_source();
    set_has_content();
    audio_source_.content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return audio_source_.content_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* RecognitionAudio::release_content() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.RecognitionAudio.content)
  if (_internal_has_content()) {
    clear_has_audio_source();
    return audio_source_.content_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  } else {
    return nullptr;
  }
}
inline void RecognitionAudio::set_allocated_content(std::string* content) {
  if (has_audio_source()) {
    clear_audio_source();
  }
  if (content != nullptr) {
    set_has_content();
    audio_source_.content_.UnsafeSetDefault(content);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(content);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.RecognitionAudio.content)
}

// string uri = 2;
inline bool RecognitionAudio::_internal_has_uri() const {
  return audio_source_case() == kUri;
}
inline bool RecognitionAudio::has_uri() const {
  return _internal_has_uri();
}
inline void RecognitionAudio::set_has_uri() {
  _oneof_case_[0] = kUri;
}
inline void RecognitionAudio::clear_uri() {
  if (_internal_has_uri()) {
    audio_source_.uri_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
    clear_has_audio_source();
  }
}
inline const std::string& RecognitionAudio::uri() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionAudio.uri)
  return _internal_uri();
}
inline void RecognitionAudio::set_uri(const std::string& value) {
  _internal_set_uri(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionAudio.uri)
}
inline std::string* RecognitionAudio::mutable_uri() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.RecognitionAudio.uri)
  return _internal_mutable_uri();
}
inline const std::string& RecognitionAudio::_internal_uri() const {
  if (_internal_has_uri()) {
    return audio_source_.uri_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void RecognitionAudio::_internal_set_uri(const std::string& value) {
  if (!_internal_has_uri()) {
    clear_audio_source();
    set_has_uri();
    audio_source_.uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  audio_source_.uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void RecognitionAudio::set_uri(std::string&& value) {
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionAudio.uri)
  if (!_internal_has_uri()) {
    clear_audio_source();
    set_has_uri();
    audio_source_.uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  audio_source_.uri_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:yandex.cloud.ai.stt.v2.RecognitionAudio.uri)
}
inline void RecognitionAudio::set_uri(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!_internal_has_uri()) {
    clear_audio_source();
    set_has_uri();
    audio_source_.uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  audio_source_.uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{},
      ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:yandex.cloud.ai.stt.v2.RecognitionAudio.uri)
}
inline void RecognitionAudio::set_uri(const char* value,
                             size_t size) {
  if (!_internal_has_uri()) {
    clear_audio_source();
    set_has_uri();
    audio_source_.uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  audio_source_.uri_.Set(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArena());
  // @@protoc_insertion_point(field_set_pointer:yandex.cloud.ai.stt.v2.RecognitionAudio.uri)
}
inline std::string* RecognitionAudio::_internal_mutable_uri() {
  if (!_internal_has_uri()) {
    clear_audio_source();
    set_has_uri();
    audio_source_.uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return audio_source_.uri_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* RecognitionAudio::release_uri() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.RecognitionAudio.uri)
  if (_internal_has_uri()) {
    clear_has_audio_source();
    return audio_source_.uri_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  } else {
    return nullptr;
  }
}
inline void RecognitionAudio::set_allocated_uri(std::string* uri) {
  if (has_audio_source()) {
    clear_audio_source();
  }
  if (uri != nullptr) {
    set_has_uri();
    audio_source_.uri_.UnsafeSetDefault(uri);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(uri);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.RecognitionAudio.uri)
}

inline bool RecognitionAudio::has_audio_source() const {
  return audio_source_case() != AUDIO_SOURCE_NOT_SET;
}
inline void RecognitionAudio::clear_has_audio_source() {
  _oneof_case_[0] = AUDIO_SOURCE_NOT_SET;
}
inline RecognitionAudio::AudioSourceCase RecognitionAudio::audio_source_case() const {
  return RecognitionAudio::AudioSourceCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RecognitionConfig

// .yandex.cloud.ai.stt.v2.RecognitionSpec specification = 1;
inline bool RecognitionConfig::_internal_has_specification() const {
  return this != internal_default_instance() && specification_ != nullptr;
}
inline bool RecognitionConfig::has_specification() const {
  return _internal_has_specification();
}
inline void RecognitionConfig::clear_specification() {
  if (GetArena() == nullptr && specification_ != nullptr) {
    delete specification_;
  }
  specification_ = nullptr;
}
inline const ::yandex::cloud::ai::stt::v2::RecognitionSpec& RecognitionConfig::_internal_specification() const {
  const ::yandex::cloud::ai::stt::v2::RecognitionSpec* p = specification_;
  return p != nullptr ? *p : reinterpret_cast<const ::yandex::cloud::ai::stt::v2::RecognitionSpec&>(
      ::yandex::cloud::ai::stt::v2::_RecognitionSpec_default_instance_);
}
inline const ::yandex::cloud::ai::stt::v2::RecognitionSpec& RecognitionConfig::specification() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionConfig.specification)
  return _internal_specification();
}
inline void RecognitionConfig::unsafe_arena_set_allocated_specification(
    ::yandex::cloud::ai::stt::v2::RecognitionSpec* specification) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(specification_);
  }
  specification_ = specification;
  if (specification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:yandex.cloud.ai.stt.v2.RecognitionConfig.specification)
}
inline ::yandex::cloud::ai::stt::v2::RecognitionSpec* RecognitionConfig::release_specification() {
  
  ::yandex::cloud::ai::stt::v2::RecognitionSpec* temp = specification_;
  specification_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::yandex::cloud::ai::stt::v2::RecognitionSpec* RecognitionConfig::unsafe_arena_release_specification() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.RecognitionConfig.specification)
  
  ::yandex::cloud::ai::stt::v2::RecognitionSpec* temp = specification_;
  specification_ = nullptr;
  return temp;
}
inline ::yandex::cloud::ai::stt::v2::RecognitionSpec* RecognitionConfig::_internal_mutable_specification() {
  
  if (specification_ == nullptr) {
    auto* p = CreateMaybeMessage<::yandex::cloud::ai::stt::v2::RecognitionSpec>(GetArena());
    specification_ = p;
  }
  return specification_;
}
inline ::yandex::cloud::ai::stt::v2::RecognitionSpec* RecognitionConfig::mutable_specification() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.RecognitionConfig.specification)
  return _internal_mutable_specification();
}
inline void RecognitionConfig::set_allocated_specification(::yandex::cloud::ai::stt::v2::RecognitionSpec* specification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete specification_;
  }
  if (specification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(specification);
    if (message_arena != submessage_arena) {
      specification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, specification, submessage_arena);
    }
    
  } else {
    
  }
  specification_ = specification;
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.RecognitionConfig.specification)
}

// string folder_id = 2;
inline void RecognitionConfig::clear_folder_id() {
  folder_id_.ClearToEmpty();
}
inline const std::string& RecognitionConfig::folder_id() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id)
  return _internal_folder_id();
}
inline void RecognitionConfig::set_folder_id(const std::string& value) {
  _internal_set_folder_id(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id)
}
inline std::string* RecognitionConfig::mutable_folder_id() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id)
  return _internal_mutable_folder_id();
}
inline const std::string& RecognitionConfig::_internal_folder_id() const {
  return folder_id_.Get();
}
inline void RecognitionConfig::_internal_set_folder_id(const std::string& value) {
  
  folder_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void RecognitionConfig::set_folder_id(std::string&& value) {
  
  folder_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id)
}
inline void RecognitionConfig::set_folder_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  folder_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id)
}
inline void RecognitionConfig::set_folder_id(const char* value,
    size_t size) {
  
  folder_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id)
}
inline std::string* RecognitionConfig::_internal_mutable_folder_id() {
  
  return folder_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* RecognitionConfig::release_folder_id() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id)
  return folder_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RecognitionConfig::set_allocated_folder_id(std::string* folder_id) {
  if (folder_id != nullptr) {
    
  } else {
    
  }
  folder_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), folder_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id)
}

// -------------------------------------------------------------------

// RecognitionSpec

// .yandex.cloud.ai.stt.v2.RecognitionSpec.AudioEncoding audio_encoding = 1;
inline void RecognitionSpec::clear_audio_encoding() {
  audio_encoding_ = 0;
}
inline ::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding RecognitionSpec::_internal_audio_encoding() const {
  return static_cast< ::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding >(audio_encoding_);
}
inline ::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding RecognitionSpec::audio_encoding() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionSpec.audio_encoding)
  return _internal_audio_encoding();
}
inline void RecognitionSpec::_internal_set_audio_encoding(::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding value) {
  
  audio_encoding_ = value;
}
inline void RecognitionSpec::set_audio_encoding(::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding value) {
  _internal_set_audio_encoding(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionSpec.audio_encoding)
}

// int64 sample_rate_hertz = 2;
inline void RecognitionSpec::clear_sample_rate_hertz() {
  sample_rate_hertz_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RecognitionSpec::_internal_sample_rate_hertz() const {
  return sample_rate_hertz_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RecognitionSpec::sample_rate_hertz() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionSpec.sample_rate_hertz)
  return _internal_sample_rate_hertz();
}
inline void RecognitionSpec::_internal_set_sample_rate_hertz(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  sample_rate_hertz_ = value;
}
inline void RecognitionSpec::set_sample_rate_hertz(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_sample_rate_hertz(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionSpec.sample_rate_hertz)
}

// string language_code = 3;
inline void RecognitionSpec::clear_language_code() {
  language_code_.ClearToEmpty();
}
inline const std::string& RecognitionSpec::language_code() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionSpec.language_code)
  return _internal_language_code();
}
inline void RecognitionSpec::set_language_code(const std::string& value) {
  _internal_set_language_code(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionSpec.language_code)
}
inline std::string* RecognitionSpec::mutable_language_code() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.RecognitionSpec.language_code)
  return _internal_mutable_language_code();
}
inline const std::string& RecognitionSpec::_internal_language_code() const {
  return language_code_.Get();
}
inline void RecognitionSpec::_internal_set_language_code(const std::string& value) {
  
  language_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void RecognitionSpec::set_language_code(std::string&& value) {
  
  language_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:yandex.cloud.ai.stt.v2.RecognitionSpec.language_code)
}
inline void RecognitionSpec::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  language_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:yandex.cloud.ai.stt.v2.RecognitionSpec.language_code)
}
inline void RecognitionSpec::set_language_code(const char* value,
    size_t size) {
  
  language_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:yandex.cloud.ai.stt.v2.RecognitionSpec.language_code)
}
inline std::string* RecognitionSpec::_internal_mutable_language_code() {
  
  return language_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* RecognitionSpec::release_language_code() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.RecognitionSpec.language_code)
  return language_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RecognitionSpec::set_allocated_language_code(std::string* language_code) {
  if (language_code != nullptr) {
    
  } else {
    
  }
  language_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), language_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.RecognitionSpec.language_code)
}

// bool profanity_filter = 4;
inline void RecognitionSpec::clear_profanity_filter() {
  profanity_filter_ = false;
}
inline bool RecognitionSpec::_internal_profanity_filter() const {
  return profanity_filter_;
}
inline bool RecognitionSpec::profanity_filter() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionSpec.profanity_filter)
  return _internal_profanity_filter();
}
inline void RecognitionSpec::_internal_set_profanity_filter(bool value) {
  
  profanity_filter_ = value;
}
inline void RecognitionSpec::set_profanity_filter(bool value) {
  _internal_set_profanity_filter(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionSpec.profanity_filter)
}

// string model = 5;
inline void RecognitionSpec::clear_model() {
  model_.ClearToEmpty();
}
inline const std::string& RecognitionSpec::model() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionSpec.model)
  return _internal_model();
}
inline void RecognitionSpec::set_model(const std::string& value) {
  _internal_set_model(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionSpec.model)
}
inline std::string* RecognitionSpec::mutable_model() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.RecognitionSpec.model)
  return _internal_mutable_model();
}
inline const std::string& RecognitionSpec::_internal_model() const {
  return model_.Get();
}
inline void RecognitionSpec::_internal_set_model(const std::string& value) {
  
  model_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void RecognitionSpec::set_model(std::string&& value) {
  
  model_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:yandex.cloud.ai.stt.v2.RecognitionSpec.model)
}
inline void RecognitionSpec::set_model(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  model_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:yandex.cloud.ai.stt.v2.RecognitionSpec.model)
}
inline void RecognitionSpec::set_model(const char* value,
    size_t size) {
  
  model_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:yandex.cloud.ai.stt.v2.RecognitionSpec.model)
}
inline std::string* RecognitionSpec::_internal_mutable_model() {
  
  return model_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* RecognitionSpec::release_model() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.RecognitionSpec.model)
  return model_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RecognitionSpec::set_allocated_model(std::string* model) {
  if (model != nullptr) {
    
  } else {
    
  }
  model_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), model,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.RecognitionSpec.model)
}

// bool partial_results = 7;
inline void RecognitionSpec::clear_partial_results() {
  partial_results_ = false;
}
inline bool RecognitionSpec::_internal_partial_results() const {
  return partial_results_;
}
inline bool RecognitionSpec::partial_results() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionSpec.partial_results)
  return _internal_partial_results();
}
inline void RecognitionSpec::_internal_set_partial_results(bool value) {
  
  partial_results_ = value;
}
inline void RecognitionSpec::set_partial_results(bool value) {
  _internal_set_partial_results(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionSpec.partial_results)
}

// bool single_utterance = 8;
inline void RecognitionSpec::clear_single_utterance() {
  single_utterance_ = false;
}
inline bool RecognitionSpec::_internal_single_utterance() const {
  return single_utterance_;
}
inline bool RecognitionSpec::single_utterance() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionSpec.single_utterance)
  return _internal_single_utterance();
}
inline void RecognitionSpec::_internal_set_single_utterance(bool value) {
  
  single_utterance_ = value;
}
inline void RecognitionSpec::set_single_utterance(bool value) {
  _internal_set_single_utterance(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionSpec.single_utterance)
}

// int64 audio_channel_count = 9;
inline void RecognitionSpec::clear_audio_channel_count() {
  audio_channel_count_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RecognitionSpec::_internal_audio_channel_count() const {
  return audio_channel_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RecognitionSpec::audio_channel_count() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionSpec.audio_channel_count)
  return _internal_audio_channel_count();
}
inline void RecognitionSpec::_internal_set_audio_channel_count(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  audio_channel_count_ = value;
}
inline void RecognitionSpec::set_audio_channel_count(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_audio_channel_count(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionSpec.audio_channel_count)
}

// bool raw_results = 10;
inline void RecognitionSpec::clear_raw_results() {
  raw_results_ = false;
}
inline bool RecognitionSpec::_internal_raw_results() const {
  return raw_results_;
}
inline bool RecognitionSpec::raw_results() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.RecognitionSpec.raw_results)
  return _internal_raw_results();
}
inline void RecognitionSpec::_internal_set_raw_results(bool value) {
  
  raw_results_ = value;
}
inline void RecognitionSpec::set_raw_results(bool value) {
  _internal_set_raw_results(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.RecognitionSpec.raw_results)
}

// -------------------------------------------------------------------

// SpeechRecognitionChunk

// repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
inline int SpeechRecognitionChunk::_internal_alternatives_size() const {
  return alternatives_.size();
}
inline int SpeechRecognitionChunk::alternatives_size() const {
  return _internal_alternatives_size();
}
inline void SpeechRecognitionChunk::clear_alternatives() {
  alternatives_.Clear();
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* SpeechRecognitionChunk::mutable_alternatives(int index) {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk.alternatives)
  return alternatives_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >*
SpeechRecognitionChunk::mutable_alternatives() {
  // @@protoc_insertion_point(field_mutable_list:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk.alternatives)
  return &alternatives_;
}
inline const ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative& SpeechRecognitionChunk::_internal_alternatives(int index) const {
  return alternatives_.Get(index);
}
inline const ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative& SpeechRecognitionChunk::alternatives(int index) const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk.alternatives)
  return _internal_alternatives(index);
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* SpeechRecognitionChunk::_internal_add_alternatives() {
  return alternatives_.Add();
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* SpeechRecognitionChunk::add_alternatives() {
  // @@protoc_insertion_point(field_add:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk.alternatives)
  return _internal_add_alternatives();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >&
SpeechRecognitionChunk::alternatives() const {
  // @@protoc_insertion_point(field_list:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk.alternatives)
  return alternatives_;
}

// bool final = 2;
inline void SpeechRecognitionChunk::clear_final() {
  final_ = false;
}
inline bool SpeechRecognitionChunk::_internal_final() const {
  return final_;
}
inline bool SpeechRecognitionChunk::final() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk.final)
  return _internal_final();
}
inline void SpeechRecognitionChunk::_internal_set_final(bool value) {
  
  final_ = value;
}
inline void SpeechRecognitionChunk::set_final(bool value) {
  _internal_set_final(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk.final)
}

// bool end_of_utterance = 3;
inline void SpeechRecognitionChunk::clear_end_of_utterance() {
  end_of_utterance_ = false;
}
inline bool SpeechRecognitionChunk::_internal_end_of_utterance() const {
  return end_of_utterance_;
}
inline bool SpeechRecognitionChunk::end_of_utterance() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk.end_of_utterance)
  return _internal_end_of_utterance();
}
inline void SpeechRecognitionChunk::_internal_set_end_of_utterance(bool value) {
  
  end_of_utterance_ = value;
}
inline void SpeechRecognitionChunk::set_end_of_utterance(bool value) {
  _internal_set_end_of_utterance(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk.end_of_utterance)
}

// -------------------------------------------------------------------

// SpeechRecognitionResult

// repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
inline int SpeechRecognitionResult::_internal_alternatives_size() const {
  return alternatives_.size();
}
inline int SpeechRecognitionResult::alternatives_size() const {
  return _internal_alternatives_size();
}
inline void SpeechRecognitionResult::clear_alternatives() {
  alternatives_.Clear();
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* SpeechRecognitionResult::mutable_alternatives(int index) {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.SpeechRecognitionResult.alternatives)
  return alternatives_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >*
SpeechRecognitionResult::mutable_alternatives() {
  // @@protoc_insertion_point(field_mutable_list:yandex.cloud.ai.stt.v2.SpeechRecognitionResult.alternatives)
  return &alternatives_;
}
inline const ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative& SpeechRecognitionResult::_internal_alternatives(int index) const {
  return alternatives_.Get(index);
}
inline const ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative& SpeechRecognitionResult::alternatives(int index) const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.SpeechRecognitionResult.alternatives)
  return _internal_alternatives(index);
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* SpeechRecognitionResult::_internal_add_alternatives() {
  return alternatives_.Add();
}
inline ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* SpeechRecognitionResult::add_alternatives() {
  // @@protoc_insertion_point(field_add:yandex.cloud.ai.stt.v2.SpeechRecognitionResult.alternatives)
  return _internal_add_alternatives();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >&
SpeechRecognitionResult::alternatives() const {
  // @@protoc_insertion_point(field_list:yandex.cloud.ai.stt.v2.SpeechRecognitionResult.alternatives)
  return alternatives_;
}

// int64 channel_tag = 2;
inline void SpeechRecognitionResult::clear_channel_tag() {
  channel_tag_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SpeechRecognitionResult::_internal_channel_tag() const {
  return channel_tag_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SpeechRecognitionResult::channel_tag() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.SpeechRecognitionResult.channel_tag)
  return _internal_channel_tag();
}
inline void SpeechRecognitionResult::_internal_set_channel_tag(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  channel_tag_ = value;
}
inline void SpeechRecognitionResult::set_channel_tag(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_channel_tag(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.SpeechRecognitionResult.channel_tag)
}

// -------------------------------------------------------------------

// SpeechRecognitionAlternative

// string text = 1;
inline void SpeechRecognitionAlternative::clear_text() {
  text_.ClearToEmpty();
}
inline const std::string& SpeechRecognitionAlternative::text() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text)
  return _internal_text();
}
inline void SpeechRecognitionAlternative::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text)
}
inline std::string* SpeechRecognitionAlternative::mutable_text() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text)
  return _internal_mutable_text();
}
inline const std::string& SpeechRecognitionAlternative::_internal_text() const {
  return text_.Get();
}
inline void SpeechRecognitionAlternative::_internal_set_text(const std::string& value) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SpeechRecognitionAlternative::set_text(std::string&& value) {
  
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text)
}
inline void SpeechRecognitionAlternative::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text)
}
inline void SpeechRecognitionAlternative::set_text(const char* value,
    size_t size) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text)
}
inline std::string* SpeechRecognitionAlternative::_internal_mutable_text() {
  
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SpeechRecognitionAlternative::release_text() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text)
  return text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SpeechRecognitionAlternative::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text)
}

// float confidence = 2;
inline void SpeechRecognitionAlternative::clear_confidence() {
  confidence_ = 0;
}
inline float SpeechRecognitionAlternative::_internal_confidence() const {
  return confidence_;
}
inline float SpeechRecognitionAlternative::confidence() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.confidence)
  return _internal_confidence();
}
inline void SpeechRecognitionAlternative::_internal_set_confidence(float value) {
  
  confidence_ = value;
}
inline void SpeechRecognitionAlternative::set_confidence(float value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.confidence)
}

// repeated .yandex.cloud.ai.stt.v2.WordInfo words = 3;
inline int SpeechRecognitionAlternative::_internal_words_size() const {
  return words_.size();
}
inline int SpeechRecognitionAlternative::words_size() const {
  return _internal_words_size();
}
inline void SpeechRecognitionAlternative::clear_words() {
  words_.Clear();
}
inline ::yandex::cloud::ai::stt::v2::WordInfo* SpeechRecognitionAlternative::mutable_words(int index) {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.words)
  return words_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::WordInfo >*
SpeechRecognitionAlternative::mutable_words() {
  // @@protoc_insertion_point(field_mutable_list:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.words)
  return &words_;
}
inline const ::yandex::cloud::ai::stt::v2::WordInfo& SpeechRecognitionAlternative::_internal_words(int index) const {
  return words_.Get(index);
}
inline const ::yandex::cloud::ai::stt::v2::WordInfo& SpeechRecognitionAlternative::words(int index) const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.words)
  return _internal_words(index);
}
inline ::yandex::cloud::ai::stt::v2::WordInfo* SpeechRecognitionAlternative::_internal_add_words() {
  return words_.Add();
}
inline ::yandex::cloud::ai::stt::v2::WordInfo* SpeechRecognitionAlternative::add_words() {
  // @@protoc_insertion_point(field_add:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.words)
  return _internal_add_words();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yandex::cloud::ai::stt::v2::WordInfo >&
SpeechRecognitionAlternative::words() const {
  // @@protoc_insertion_point(field_list:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.words)
  return words_;
}

// -------------------------------------------------------------------

// WordInfo

// .google.protobuf.Duration start_time = 1;
inline bool WordInfo::_internal_has_start_time() const {
  return this != internal_default_instance() && start_time_ != nullptr;
}
inline bool WordInfo::has_start_time() const {
  return _internal_has_start_time();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& WordInfo::_internal_start_time() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = start_time_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& WordInfo::start_time() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.WordInfo.start_time)
  return _internal_start_time();
}
inline void WordInfo::unsafe_arena_set_allocated_start_time(
    PROTOBUF_NAMESPACE_ID::Duration* start_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_time_);
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:yandex.cloud.ai.stt.v2.WordInfo.start_time)
}
inline PROTOBUF_NAMESPACE_ID::Duration* WordInfo::release_start_time() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = start_time_;
  start_time_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* WordInfo::unsafe_arena_release_start_time() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.WordInfo.start_time)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = start_time_;
  start_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* WordInfo::_internal_mutable_start_time() {
  
  if (start_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    start_time_ = p;
  }
  return start_time_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* WordInfo::mutable_start_time() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.WordInfo.start_time)
  return _internal_mutable_start_time();
}
inline void WordInfo::set_allocated_start_time(PROTOBUF_NAMESPACE_ID::Duration* start_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.WordInfo.start_time)
}

// .google.protobuf.Duration end_time = 2;
inline bool WordInfo::_internal_has_end_time() const {
  return this != internal_default_instance() && end_time_ != nullptr;
}
inline bool WordInfo::has_end_time() const {
  return _internal_has_end_time();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& WordInfo::_internal_end_time() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = end_time_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& WordInfo::end_time() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.WordInfo.end_time)
  return _internal_end_time();
}
inline void WordInfo::unsafe_arena_set_allocated_end_time(
    PROTOBUF_NAMESPACE_ID::Duration* end_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_time_);
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:yandex.cloud.ai.stt.v2.WordInfo.end_time)
}
inline PROTOBUF_NAMESPACE_ID::Duration* WordInfo::release_end_time() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = end_time_;
  end_time_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* WordInfo::unsafe_arena_release_end_time() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.WordInfo.end_time)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = end_time_;
  end_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* WordInfo::_internal_mutable_end_time() {
  
  if (end_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    end_time_ = p;
  }
  return end_time_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* WordInfo::mutable_end_time() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.WordInfo.end_time)
  return _internal_mutable_end_time();
}
inline void WordInfo::set_allocated_end_time(PROTOBUF_NAMESPACE_ID::Duration* end_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_time_);
  }
  if (end_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_time)->GetArena();
    if (message_arena != submessage_arena) {
      end_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, end_time, submessage_arena);
    }
    
  } else {
    
  }
  end_time_ = end_time;
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.WordInfo.end_time)
}

// string word = 3;
inline void WordInfo::clear_word() {
  word_.ClearToEmpty();
}
inline const std::string& WordInfo::word() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.WordInfo.word)
  return _internal_word();
}
inline void WordInfo::set_word(const std::string& value) {
  _internal_set_word(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.WordInfo.word)
}
inline std::string* WordInfo::mutable_word() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.ai.stt.v2.WordInfo.word)
  return _internal_mutable_word();
}
inline const std::string& WordInfo::_internal_word() const {
  return word_.Get();
}
inline void WordInfo::_internal_set_word(const std::string& value) {
  
  word_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void WordInfo::set_word(std::string&& value) {
  
  word_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:yandex.cloud.ai.stt.v2.WordInfo.word)
}
inline void WordInfo::set_word(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  word_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:yandex.cloud.ai.stt.v2.WordInfo.word)
}
inline void WordInfo::set_word(const char* value,
    size_t size) {
  
  word_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:yandex.cloud.ai.stt.v2.WordInfo.word)
}
inline std::string* WordInfo::_internal_mutable_word() {
  
  return word_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* WordInfo::release_word() {
  // @@protoc_insertion_point(field_release:yandex.cloud.ai.stt.v2.WordInfo.word)
  return word_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void WordInfo::set_allocated_word(std::string* word) {
  if (word != nullptr) {
    
  } else {
    
  }
  word_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), word,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.WordInfo.word)
}

// float confidence = 4;
inline void WordInfo::clear_confidence() {
  confidence_ = 0;
}
inline float WordInfo::_internal_confidence() const {
  return confidence_;
}
inline float WordInfo::confidence() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.ai.stt.v2.WordInfo.confidence)
  return _internal_confidence();
}
inline void WordInfo::_internal_set_confidence(float value) {
  
  confidence_ = value;
}
inline void WordInfo::set_confidence(float value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.ai.stt.v2.WordInfo.confidence)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace stt
}  // namespace ai
}  // namespace cloud
}  // namespace yandex

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding>() {
  return ::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto
