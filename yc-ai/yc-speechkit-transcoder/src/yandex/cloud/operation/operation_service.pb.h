// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/operation/operation_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_yandex_2fcloud_2foperation_2foperation_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_yandex_2fcloud_2foperation_2foperation_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "yandex/cloud/operation/operation.pb.h"
#include "yandex/cloud/validation.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_yandex_2fcloud_2foperation_2foperation_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_yandex_2fcloud_2foperation_2foperation_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_yandex_2fcloud_2foperation_2foperation_5fservice_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_yandex_2fcloud_2foperation_2foperation_5fservice_2eproto_metadata_getter(int index);
namespace yandex {
namespace cloud {
namespace operation {
class CancelOperationRequest;
struct CancelOperationRequestDefaultTypeInternal;
extern CancelOperationRequestDefaultTypeInternal _CancelOperationRequest_default_instance_;
class GetOperationRequest;
struct GetOperationRequestDefaultTypeInternal;
extern GetOperationRequestDefaultTypeInternal _GetOperationRequest_default_instance_;
}  // namespace operation
}  // namespace cloud
}  // namespace yandex
PROTOBUF_NAMESPACE_OPEN
template<> ::yandex::cloud::operation::CancelOperationRequest* Arena::CreateMaybeMessage<::yandex::cloud::operation::CancelOperationRequest>(Arena*);
template<> ::yandex::cloud::operation::GetOperationRequest* Arena::CreateMaybeMessage<::yandex::cloud::operation::GetOperationRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace yandex {
namespace cloud {
namespace operation {

// ===================================================================

class GetOperationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.operation.GetOperationRequest) */ {
 public:
  inline GetOperationRequest() : GetOperationRequest(nullptr) {}
  virtual ~GetOperationRequest();
  explicit constexpr GetOperationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetOperationRequest(const GetOperationRequest& from);
  GetOperationRequest(GetOperationRequest&& from) noexcept
    : GetOperationRequest() {
    *this = ::std::move(from);
  }

  inline GetOperationRequest& operator=(const GetOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOperationRequest& operator=(GetOperationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetOperationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOperationRequest* internal_default_instance() {
    return reinterpret_cast<const GetOperationRequest*>(
               &_GetOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetOperationRequest& a, GetOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOperationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOperationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetOperationRequest* New() const final {
    return CreateMaybeMessage<GetOperationRequest>(nullptr);
  }

  GetOperationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetOperationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetOperationRequest& from);
  void MergeFrom(const GetOperationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetOperationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.operation.GetOperationRequest";
  }
  protected:
  explicit GetOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2foperation_2foperation_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOperationIdFieldNumber = 1,
  };
  // string operation_id = 1 [(.yandex.cloud.required) = true];
  void clear_operation_id();
  const std::string& operation_id() const;
  void set_operation_id(const std::string& value);
  void set_operation_id(std::string&& value);
  void set_operation_id(const char* value);
  void set_operation_id(const char* value, size_t size);
  std::string* mutable_operation_id();
  std::string* release_operation_id();
  void set_allocated_operation_id(std::string* operation_id);
  private:
  const std::string& _internal_operation_id() const;
  void _internal_set_operation_id(const std::string& value);
  std::string* _internal_mutable_operation_id();
  public:

  // @@protoc_insertion_point(class_scope:yandex.cloud.operation.GetOperationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr operation_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yandex_2fcloud_2foperation_2foperation_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CancelOperationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yandex.cloud.operation.CancelOperationRequest) */ {
 public:
  inline CancelOperationRequest() : CancelOperationRequest(nullptr) {}
  virtual ~CancelOperationRequest();
  explicit constexpr CancelOperationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CancelOperationRequest(const CancelOperationRequest& from);
  CancelOperationRequest(CancelOperationRequest&& from) noexcept
    : CancelOperationRequest() {
    *this = ::std::move(from);
  }

  inline CancelOperationRequest& operator=(const CancelOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelOperationRequest& operator=(CancelOperationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CancelOperationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CancelOperationRequest* internal_default_instance() {
    return reinterpret_cast<const CancelOperationRequest*>(
               &_CancelOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CancelOperationRequest& a, CancelOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CancelOperationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelOperationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CancelOperationRequest* New() const final {
    return CreateMaybeMessage<CancelOperationRequest>(nullptr);
  }

  CancelOperationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CancelOperationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CancelOperationRequest& from);
  void MergeFrom(const CancelOperationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CancelOperationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yandex.cloud.operation.CancelOperationRequest";
  }
  protected:
  explicit CancelOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_yandex_2fcloud_2foperation_2foperation_5fservice_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOperationIdFieldNumber = 1,
  };
  // string operation_id = 1 [(.yandex.cloud.required) = true];
  void clear_operation_id();
  const std::string& operation_id() const;
  void set_operation_id(const std::string& value);
  void set_operation_id(std::string&& value);
  void set_operation_id(const char* value);
  void set_operation_id(const char* value, size_t size);
  std::string* mutable_operation_id();
  std::string* release_operation_id();
  void set_allocated_operation_id(std::string* operation_id);
  private:
  const std::string& _internal_operation_id() const;
  void _internal_set_operation_id(const std::string& value);
  std::string* _internal_mutable_operation_id();
  public:

  // @@protoc_insertion_point(class_scope:yandex.cloud.operation.CancelOperationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr operation_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yandex_2fcloud_2foperation_2foperation_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetOperationRequest

// string operation_id = 1 [(.yandex.cloud.required) = true];
inline void GetOperationRequest::clear_operation_id() {
  operation_id_.ClearToEmpty();
}
inline const std::string& GetOperationRequest::operation_id() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.operation.GetOperationRequest.operation_id)
  return _internal_operation_id();
}
inline void GetOperationRequest::set_operation_id(const std::string& value) {
  _internal_set_operation_id(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.operation.GetOperationRequest.operation_id)
}
inline std::string* GetOperationRequest::mutable_operation_id() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.operation.GetOperationRequest.operation_id)
  return _internal_mutable_operation_id();
}
inline const std::string& GetOperationRequest::_internal_operation_id() const {
  return operation_id_.Get();
}
inline void GetOperationRequest::_internal_set_operation_id(const std::string& value) {
  
  operation_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetOperationRequest::set_operation_id(std::string&& value) {
  
  operation_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:yandex.cloud.operation.GetOperationRequest.operation_id)
}
inline void GetOperationRequest::set_operation_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  operation_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:yandex.cloud.operation.GetOperationRequest.operation_id)
}
inline void GetOperationRequest::set_operation_id(const char* value,
    size_t size) {
  
  operation_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:yandex.cloud.operation.GetOperationRequest.operation_id)
}
inline std::string* GetOperationRequest::_internal_mutable_operation_id() {
  
  return operation_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetOperationRequest::release_operation_id() {
  // @@protoc_insertion_point(field_release:yandex.cloud.operation.GetOperationRequest.operation_id)
  return operation_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetOperationRequest::set_allocated_operation_id(std::string* operation_id) {
  if (operation_id != nullptr) {
    
  } else {
    
  }
  operation_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), operation_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.operation.GetOperationRequest.operation_id)
}

// -------------------------------------------------------------------

// CancelOperationRequest

// string operation_id = 1 [(.yandex.cloud.required) = true];
inline void CancelOperationRequest::clear_operation_id() {
  operation_id_.ClearToEmpty();
}
inline const std::string& CancelOperationRequest::operation_id() const {
  // @@protoc_insertion_point(field_get:yandex.cloud.operation.CancelOperationRequest.operation_id)
  return _internal_operation_id();
}
inline void CancelOperationRequest::set_operation_id(const std::string& value) {
  _internal_set_operation_id(value);
  // @@protoc_insertion_point(field_set:yandex.cloud.operation.CancelOperationRequest.operation_id)
}
inline std::string* CancelOperationRequest::mutable_operation_id() {
  // @@protoc_insertion_point(field_mutable:yandex.cloud.operation.CancelOperationRequest.operation_id)
  return _internal_mutable_operation_id();
}
inline const std::string& CancelOperationRequest::_internal_operation_id() const {
  return operation_id_.Get();
}
inline void CancelOperationRequest::_internal_set_operation_id(const std::string& value) {
  
  operation_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CancelOperationRequest::set_operation_id(std::string&& value) {
  
  operation_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:yandex.cloud.operation.CancelOperationRequest.operation_id)
}
inline void CancelOperationRequest::set_operation_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  operation_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:yandex.cloud.operation.CancelOperationRequest.operation_id)
}
inline void CancelOperationRequest::set_operation_id(const char* value,
    size_t size) {
  
  operation_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:yandex.cloud.operation.CancelOperationRequest.operation_id)
}
inline std::string* CancelOperationRequest::_internal_mutable_operation_id() {
  
  return operation_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CancelOperationRequest::release_operation_id() {
  // @@protoc_insertion_point(field_release:yandex.cloud.operation.CancelOperationRequest.operation_id)
  return operation_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CancelOperationRequest::set_allocated_operation_id(std::string* operation_id) {
  if (operation_id != nullptr) {
    
  } else {
    
  }
  operation_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), operation_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.operation.CancelOperationRequest.operation_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace operation
}  // namespace cloud
}  // namespace yandex

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_yandex_2fcloud_2foperation_2foperation_5fservice_2eproto
